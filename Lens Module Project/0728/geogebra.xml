<?xml version="1.0" encoding="utf-8"?>
<geogebra format="5.0" version="5.2.893.2" app="classic" platform="w" id="61469106-2108-4291-863a-bdf6c09e6fd9"  xsi:noNamespaceSchemaLocation="http://www.geogebra.org/apps/xsd/ggb.xsd" xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" >
<gui>
	<window width="1536" height="826" />
	<perspectives>
<perspective id="tmp">
	<panes>
		<pane location="" divider="0.3359375" orientation="1" />
	</panes>
	<views>
		<view id="8" toolbar="1001 | 1002 | 1003  || 1005 | 1004 || 1006 | 1007 | 1010 || 1008 | 1009 || 6" visible="false" inframe="false" stylebar="false" location="1,3,3" size="300" window="100,100,600,400" />
		<view id="4" toolbar="0 || 2020 , 2021 , 2022 || 2001 , 2003 , 2002 , 2004 , 2005 || 2040 , 2041 , 2042 , 2044 , 2043" visible="false" inframe="false" stylebar="false" location="1,1" size="300" window="100,100,600,400" />
		<view id="32" visible="false" inframe="false" stylebar="true" location="3,1" size="313" window="50,50,500,500" />
		<view id="1" visible="false" inframe="false" stylebar="true" location="3" size="500" window="100,100,600,400" />
		<view id="2" visible="true" inframe="false" stylebar="true" location="3" size="516" tab="ALGEBRA" window="100,100,250,400" />
		<view id="16" visible="false" inframe="false" stylebar="false" location="1" size="300" window="50,50,500,500" />
		<view id="64" toolbar="0" visible="false" inframe="false" stylebar="false" location="1" size="472" window="50,50,500,500" />
		<view id="128" visible="false" inframe="false" stylebar="false" location="1" size="480" window="50,50,500,500" />
		<view id="4097" visible="false" inframe="false" stylebar="true" location="1" size="784" window="100,100,700,550" />
		<view id="70" toolbar="0 || 2020 || 2021 || 2022" visible="false" inframe="false" stylebar="true" location="1" size="900" window="50,50,500,500" />
		<view id="512" toolbar="0 | 1 501 5 19 , 67 | 2 15 45 18 , 7 37 | 514 3 9 , 13 44 , 47 | 16 51 | 551 550 11 ,  20 22 21 23 , 55 56 57 , 12 | 69 | 510 511 , 512 513 | 533 531 , 534 532 , 522 523 , 537 536 , 535 , 538 | 521 520 | 36 , 38 49 560 | 571 30 29 570 31 33 | 17 | 540 40 41 42 , 27 28 35 , 6 , 502" visible="true" inframe="false" stylebar="true" location="1" size="1012" window="100,100,600,400" />
	</views>
	<toolbar show="true" items="0 73 62 | 1 501 67 , 5 19 , 72 75 76 | 2 15 45 , 18 65 , 7 37 | 4 3 8 9 , 13 44 , 58 , 47 | 16 51 64 , 70 | 10 34 53 11 , 24  20 22 , 21 23 | 55 56 57 , 12 | 36 46 , 38 49  50 , 71  14  68 | 30 29 54 32 31 33 | 25 17 26 60 52 61 | 40 41 42 , 27 28 35 , 6" position="1" help="false" />
	<input show="true" cmd="true" top="algebra" />
	<dockBar show="false" east="false" />
</perspective>
	</perspectives>
	<labelingStyle  val="0"/>
	<font  size="14"/>
</gui>
<euclidianView>
	<viewNumber viewNo="1"/>
	<size  width="820" height="728"/>
	<coordSystem xZero="521.258341468005" yZero="276.14819040046393" scale="50.484814373961065" yscale="50.48481437396107"/>
	<evSettings axes="true" grid="true" gridIsBold="false" pointCapturing="3" rightAngleStyle="1" checkboxSize="26" gridType="3"/>
	<bgColor r="255" g="255" b="255"/>
	<axesColor r="37" g="37" b="37"/>
	<gridColor r="192" g="192" b="192"/>
	<lineStyle axes="1" grid="0"/>
	<axis id="0" show="true" label="" unitLabel="" tickStyle="1" showNumbers="true"/>
	<axis id="1" show="true" label="" unitLabel="" tickStyle="1" showNumbers="true"/>
</euclidianView>
<algebraView>
	<mode val="1"/>
	<collapsed val="0,1,2,3,4,5,6,7,8,9,11,12,13,14,15"/>
</algebraView>
<kernel>
	<uses3D val="true"/>
	<continuous val="false"/>
	<usePathAndRegionParameters val="true"/>
	<significantfigures val="3"/>
	<angleUnit val="radiant"/>
	<algebraStyle val="3" spreadsheet="0"/>
	<coordStyle val="0"/>
</kernel>
<tableview min="0" max="0" step="0"/>
<scripting blocked="false" disabled="false"/>
<euclidianView3D>
	<coordSystem xZero="-2.1849568143316334" yZero="-2.2915805797967073" zZero="-0.7537092921017722" scale="206.64091973925545" xAngle="81" zAngle="-825.2843231468946"/>
	<evSettings axes="false" grid="true" gridIsBold="false" pointCapturing="3" rightAngleStyle="1" gridType="3"/>
	<axis id="0" show="false" label="x" unitLabel="" tickStyle="1" showNumbers="true"/>
	<axis id="1" show="false" label="y" unitLabel="" tickStyle="1" showNumbers="true"/>
	<axis id="2" show="false" label="z" unitLabel="" tickStyle="1" showNumbers="true"/>
	<plate show="false"/>
	<bgColor r="255" g="255" b="255"/>
	<clipping use="false" show="false" size="1"/>
	<projection type="0"/>
</euclidianView3D>
<construction title="Lens Module" author="" date="">
<element type="point3d" label="A">
	<show object="true" label="true" ev="20"/>
	<objColor r="204" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<fixed val="true"/>
	<pointSize val="5"/>
	<coords x="2.2440053217915743" y="1.6357414282237155" z="0.08" w="1"/>
</element>
<expression label="B" exp="(3.179997332136942, 3.6947352622971024, 0.07554869982049217)" type="point"/>
<element type="point3d" label="B">
	<show object="true" label="true" ev="20"/>
	<objColor r="0" g="153" b="255" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<fixed val="true"/>
	<pointSize val="5"/>
	<coords x="3.179997332136942" y="3.6947352622971024" z="0.07554869982049217" w="1"/>
</element>
<element type="numeric" label="τ">
	<value val="1.8"/>
	<show object="false" label="true"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
	<layer val="0"/>
	<labelMode val="1"/>
	<animation step="0.10000" speed="1" type="0" playing="false"/>
</element>
<expression label="ρ" exp="1.0000"/>
<element type="numeric" label="ρ">
	<value val="1"/>
	<show object="false" label="true"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
	<layer val="0"/>
	<labelMode val="1"/>
	<animation step="0.1" speed="1" type="0" playing="false"/>
</element>
<command name="Sphere">
	<input a0="A" a1="ρ"/>
	<output a0="a"/>
</command>
<element type="quadric" label="a">
	<show object="false" label="false" ev="4"/>
	<objColor r="211" g="47" b="47" alpha="0.15"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<eqnStyle style="specific"/>
	<eigenvectors x0="1" y0="0" z0="0" x1="0" y1="1" z1="0" x2="0" y2="0" z2="1"/>
	<matrix A0="1" A1="1" A2="1" A3="6.7176099042362685" A4="0" A5="0" A6="0" A7="-2.2440053217915743" A8="-1.6357414282237155" A9="-0.08"/>
</element>
<command name="Sphere">
	<input a0="B" a1="τ"/>
	<output a0="b"/>
</command>
<element type="quadric" label="b">
	<show object="false" label="false" ev="4"/>
	<objColor r="199" g="80" b="0" alpha="0.2"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<eqnStyle style="specific"/>
	<eigenvectors x0="1" y0="0" z0="0" x1="0" y1="1" z1="0" x2="0" y2="0" z2="1"/>
	<matrix A0="1" A1="1" A2="1" A3="20.529159296904275" A4="0" A5="0" A6="0" A7="-3.179997332136942" A8="-3.6947352622971024" A9="-0.07554869982049217"/>
</element>
<cascell>
	<cellPair>
		<inputCell>
			<expression value="a=b"  eval="Evaluate(a = b)" evalCmd=""/>
		</inputCell>
		<outputCell>
			<expression value="CAS.GeneralErrorMessage" error="true" native="true"/>
		</outputCell>
	</cellPair>
</cascell>
<command name="IntersectConic">
	<input a0="b" a1="a"/>
	<output a0="LensMidplane"/>
</command>
<element type="conic3d" label="LensMidplane">
	<show object="true" label="false" ev="20"/>
	<objColor r="102" g="204" b="255" alpha="0.2"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<auxiliary val="false"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<eqnStyle style="parametric"/>
	<eigenvectors x0="1" y0="0" z0="1.0" x1="0" y1="1" z1="1.0"/>
	<matrix A0="1" A1="1" A2="-0.5958980687061982" A3="0" A4="0" A5="0"/>
</element>
<command name="Surface">
	<input a0="LensMidplane" a1="(2 * pi)" a2="xAxis"/>
	<output a0="CurveΧ"/>
</command>
<element type="surfacecartesian3d" label="CurveΧ">
	<show object="false" label="false" ev="4"/>
	<objColor r="151" g="95" b="168" alpha="0.75"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="1" type="0" typeHidden="1"/>
</element>
<command name="Plane">
	<input a0="LensMidplane"/>
	<output a0="LensExtension"/>
</command>
<element type="plane3d" label="LensExtension">
	<show object="false" label="false" ev="4"/>
	<objColor r="99" g="219" b="219" alpha="0.5"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<fading val="0.10000000149011612"/>
	<lineStyle thickness="0" type="0" typeHidden="1"/>
	<eqnStyle style="user"/>
	<coords x="-0.41383355346527795" y="-0.9103504362214384" z="0.001968069545964017" w="3.0532752955444553"/>
</element>
<command name="Surface">
	<input a0="LensMidplane" a1="(2 * pi)" a2="yAxis"/>
	<output a0="CurveΥ"/>
</command>
<element type="surfacecartesian3d" label="CurveΥ">
	<show object="false" label="false" ev="4"/>
	<objColor r="0" g="0" b="255" alpha="0.75"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="1" type="0" typeHidden="1"/>
</element>
<command name="PointIn">
	<input a0="LensMidplane"/>
	<output a0="C"/>
</command>
<element type="point3d" label="C">
	<show object="false" label="true" ev="20"/>
	<objColor r="125" g="125" b="255" alpha="0"/>
	<layer val="0"/>
	<labelOffset x="80" y="-8"/>
	<labelMode val="3"/>
	<animation step="1" speed="1" type="1" playing="false"/>
	<caption val="Control"/>
	<pointSize val="5"/>
	<coords x="2.6532247177009403" y="2.1480427694205178" z="0.09643444170859872" w="1"/>
</element>
<command name="Segment">
	<input a0="A" a1="C"/>
	<output a0="Connect_{AC}"/>
</command>
<element type="segment3d" label="Connect_{AC}">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
<command name="Plane">
	<input a0="A" a1="B" a2="C"/>
	<output a0="ABC_{1}"/>
</command>
<element type="plane3d" label="ABC_{1}">
	<show object="false" label="false" ev="4"/>
	<objColor r="99" g="219" b="219" alpha="0.5"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<fading val="0.10000000149011612"/>
	<lineStyle thickness="0" type="0" typeHidden="1"/>
	<eqnStyle style="user"/>
	<coords x="0.03611882119647468" y="-0.01720406450420452" z="-0.36307025071119753" w="-0.023863805881471266"/>
</element>
<command name="Surface">
	<input a0="LensMidplane" a1="(2 * pi)" a2="zAxis"/>
	<output a0="CurveΖ"/>
</command>
<element type="surfacecartesian3d" label="CurveΖ">
	<show object="false" label="false" ev="4"/>
	<objColor r="213" g="0" b="249" alpha="0.75"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="1" type="0" typeHidden="1"/>
</element>
<command name="Circle">
	<input a0="A" a1="ρ" a2="ABC_{1}"/>
	<output a0="Circle_{Αρ1}"/>
</command>
<element type="conic3d" label="Circle_{Αρ1}">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<eqnStyle style="parametric"/>
	<eigenvectors x0="1" y0="0" z0="1.0" x1="0" y1="1" z1="1.0"/>
	<matrix A0="1" A1="1" A2="-1" A3="0" A4="0" A5="0"/>
</element>
<command name="Circle">
	<input a0="B" a1="τ" a2="ABC_{1}"/>
	<output a0="Circle_{Bτ1}"/>
</command>
<element type="conic3d" label="Circle_{Bτ1}">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<eqnStyle style="parametric"/>
	<eigenvectors x0="1" y0="0" z0="1.0" x1="0" y1="1" z1="1.0"/>
	<matrix A0="1" A1="1" A2="-3.24" A3="0" A4="0" A5="0"/>
</element>
<command name="Intersect">
	<input a0="Circle_{Αρ1}" a1="Circle_{Bτ1}" a2="2"/>
	<output a0="Vertex_{1→2}"/>
</command>
<element type="point3d" label="Vertex_{1→2}">
	<show object="false" label="true" ev="20"/>
	<objColor r="68" g="68" b="68" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<pointSize val="4"/>
	<coords x="1.8084916451365782" y="2.531826526987791" z="-0.005786556169511375" w="1"/>
</element>
<command name="Intersect">
	<input a0="Circle_{Αρ1}" a1="Circle_{Bτ1}" a2="1"/>
	<output a0="Vertex_{1→1}"/>
</command>
<element type="point3d" label="Vertex_{1→1}">
	<show object="false" label="true" ev="20"/>
	<objColor r="68" g="68" b="68" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<pointSize val="4"/>
	<coords x="3.205658802682255" y="1.8970578893106957" z="0.1632843914296902" w="1"/>
</element>
<command name="Segment">
	<input a0="Vertex_{1→2}" a1="Vertex_{1→1}"/>
	<output a0="MirrowCross_{1}"/>
</command>
<element type="segment3d" label="MirrowCross_{1}">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
<command name="OrthogonalPlane">
	<input a0="A" a1="MirrowCross_{1}"/>
	<output a0="ABC_{2}"/>
</command>
<element type="plane3d" label="ABC_{2}">
	<show object="false" label="false" ev="4"/>
	<objColor r="99" g="219" b="219" alpha="0.5"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<fading val="0.10000000149011612"/>
	<lineStyle thickness="0" type="0" typeHidden="1"/>
	<eqnStyle style="user"/>
	<coords x="1.3971671575456768" y="-0.6347686376770951" z="0.16907094759920158" w="-2.110458854787288"/>
</element>
<command name="CircleArc">
	<input a0="A" a1="Vertex_{1→1}" a2="Vertex_{1→2}"/>
	<output a0="Arc_{Aρ1}"/>
</command>
<element type="conicpart" label="Arc_{Aρ1}">
	<show object="false" label="false" ev="20"/>
	<objColor r="51" g="255" b="204" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<eqnStyle style="parametric"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
	<eigenvectors x0="1" y0="0" z0="1.0" x1="0" y1="1" z1="1.0"/>
	<matrix A0="1" A1="1" A2="-0.9999999999999998" A3="0" A4="0" A5="0"/>
</element>
<command name="CircleArc">
	<input a0="B" a1="Vertex_{1→1}" a2="Vertex_{1→2}"/>
	<output a0="Arc_{Βτ1}"/>
</command>
<element type="conicpart" label="Arc_{Βτ1}">
	<show object="false" label="false" ev="20"/>
	<objColor r="51" g="255" b="204" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<eqnStyle style="parametric"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
	<eigenvectors x0="1" y0="0" z0="1.0" x1="0" y1="1" z1="1.0"/>
	<matrix A0="1" A1="1" A2="-3.240000000000001" A3="0" A4="0" A5="0"/>
</element>
<command name="Segment">
	<input a0="A" a1="B"/>
	<output a0="SCDis"/>
</command>
<element type="segment3d" label="SCDis">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
<command name="Circle">
	<input a0="A" a1="ρ" a2="ABC_{2}"/>
	<output a0="Circle_{Αρ2}"/>
</command>
<element type="conic3d" label="Circle_{Αρ2}">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<eqnStyle style="parametric"/>
	<eigenvectors x0="1" y0="0" z0="1.0" x1="0" y1="1" z1="1.0"/>
	<matrix A0="1" A1="1" A2="-1" A3="0" A4="0" A5="0"/>
</element>
<command name="Circle">
	<input a0="B" a1="τ" a2="ABC_{2}"/>
	<output a0="Circle_{Bτ2}"/>
</command>
<element type="conic3d" label="Circle_{Bτ2}">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<eqnStyle style="parametric"/>
	<eigenvectors x0="1" y0="0" z0="1.0" x1="0" y1="1" z1="1.0"/>
	<matrix A0="1" A1="1" A2="-3.24" A3="0" A4="0" A5="0"/>
</element>
<command name="Intersect">
	<input a0="Circle_{Αρ2}" a1="Circle_{Bτ2}" a2="2"/>
	<output a0="Vertex_{2→2}"/>
</command>
<element type="point3d" label="Vertex_{2→2}">
	<show object="false" label="true" ev="20"/>
	<objColor r="68" g="68" b="68" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<pointSize val="4"/>
	<coords x="2.5834074949467962" y="2.17808373156619" z="-0.688551228522011" w="1"/>
</element>
<command name="Intersect">
	<input a0="Circle_{Αρ2}" a1="Circle_{Bτ2}" a2="1"/>
	<output a0="Vertex_{2→1}"/>
</command>
<element type="point3d" label="Vertex_{2→1}">
	<show object="false" label="true" ev="20"/>
	<objColor r="68" g="68" b="68" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<pointSize val="4"/>
	<coords x="2.4307429528720363" y="2.250800684732296" z="0.8460490637821898" w="1"/>
</element>
<command name="Intersect">
	<input a0="SCDis" a1="Circle_{Bτ2}" a2="2"/>
	<output a0="LensSurfaceM_{A}"/>
</command>
<element type="point3d" label="LensSurfaceM_{A}">
	<show object="false" label="true" ev="20"/>
	<objColor r="68" g="68" b="68" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<pointSize val="4"/>
	<coords x="2.435096935899442" y="2.0561044770985126" z="0.07909122500322746" w="1"/>
</element>
<command name="Intersect">
	<input a0="SCDis" a1="Circle_{Αρ2}" a2="1"/>
	<output a0="LensSurfaceM_{B}"/>
</command>
<element type="point3d" label="LensSurfaceM_{B}">
	<show object="false" label="true" ev="20"/>
	<objColor r="68" g="68" b="68" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<pointSize val="4"/>
	<coords x="2.6578388752568523" y="2.5460918644451542" z="0.07803193045403596" w="1"/>
</element>
<command name="CircleArc">
	<input a0="A" a1="Vertex_{2→1}" a2="Vertex_{2→2}"/>
	<output a0="Arc_{Aρ2}"/>
</command>
<element type="conicpart" label="Arc_{Aρ2}">
	<show object="false" label="false" ev="20"/>
	<objColor r="51" g="255" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<eqnStyle style="parametric"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
	<eigenvectors x0="1" y0="0" z0="1.0" x1="0" y1="1" z1="1.0"/>
	<matrix A0="1" A1="1" A2="-1" A3="0" A4="0" A5="0"/>
</element>
<command name="CircleArc">
	<input a0="B" a1="Vertex_{2→1}" a2="Vertex_{2→2}"/>
	<output a0="Arc_{Bτ2}"/>
</command>
<element type="conicpart" label="Arc_{Bτ2}">
	<show object="false" label="false" ev="20"/>
	<objColor r="51" g="255" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<eqnStyle style="parametric"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
	<eigenvectors x0="1" y0="0" z0="1.0" x1="0" y1="1" z1="1.0"/>
	<matrix A0="1" A1="1" A2="-3.240000000000004" A3="0" A4="0" A5="0"/>
</element>
<expression label="Conics" exp="{Arc_{Aρ2}, Arc_{Bτ2}, Arc_{Aρ1}, Arc_{Βτ1}}" />
<element type="list" label="Conics">
	<show object="false" label="true" ev="20"/>
	<objColor r="0" g="100" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<pointSize val="5"/>
	<pointStyle val="0"/>
	<angleStyle val="0"/>
</element>
<command name="Point">
	<input a0="Arc_{Βτ1}"/>
	<output a0="IncidentPointA_{1st}"/>
</command>
<element type="point3d" label="IncidentPointA_{1st}">
	<show object="true" label="true" ev="20"/>
	<objColor r="204" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelOffset x="-60" y="53"/>
	<labelMode val="0"/>
	<animation step="0.1" speed="1" type="1" playing="false"/>
	<pointSize val="4"/>
	<coords x="1.840539965032538" y="2.4947274844010936" z="-0.0008404008341247049" w="1"/>
</element>
<command name="Segment">
	<input a0="B" a1="C"/>
	<output a0="Connect_{BC}"/>
</command>
<element type="segment3d" label="Connect_{BC}">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
<command name="Point">
	<input a0="Arc_{Aρ1}"/>
	<output a0="IncidentPointB_{1st}"/>
</command>
<element type="point3d" label="IncidentPointB_{1st}">
	<show object="true" label="true" ev="20"/>
	<objColor r="0" g="153" b="255" alpha="0"/>
	<layer val="0"/>
	<labelOffset x="-2" y="-80"/>
	<labelMode val="0"/>
	<animation step="1" speed="1" type="1" playing="false"/>
	<pointSize val="4"/>
	<coords x="3.191441950513098" y="1.9456328799441525" z="0.1595683524235178" w="1"/>
</element>
<element type="point3d" label="LightSource">
	<show object="true" label="true" ev="20"/>
	<objColor r="51" g="255" b="204" alpha="0"/>
	<layer val="0"/>
	<labelOffset x="13" y="-4"/>
	<labelMode val="0"/>
	<animation step="0.1" speed="1" type="1" playing="false"/>
	<pointSize val="5"/>
	<coords x="3.6" y="2.2" z="0.17096905956868713" w="1"/>
</element>
<command name="Segment">
	<input a0="IncidentPointB_{1st}" a1="C"/>
	<output a0="C_{→}IncidentPointB"/>
</command>
<element type="segment3d" label="C_{→}IncidentPointB">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
<command name="Segment">
	<input a0="Vertex_{2→1}" a1="Vertex_{2→2}"/>
	<output a0="MirrowCross_{2}"/>
</command>
<element type="segment3d" label="MirrowCross_{2}">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
<command name="Intersect">
	<input a0="MirrowCross_{2}" a1="MirrowCross_{1}"/>
	<output a0="LensCenter"/>
</command>
<element type="point3d" label="LensCenter">
	<show object="false" label="true" ev="20"/>
	<objColor r="68" g="68" b="68" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<pointSize val="5"/>
	<coords x="2.5070752239094163" y="2.2144422081492428" z="0.07874891763008918" w="1"/>
</element>
<command name="OrthogonalLine">
	<input a0="LensCenter" a1="LensExtension"/>
	<output a0="Spindle"/>
</command>
<element type="line3d" label="Spindle">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<eqnStyle style="parametric" parameter="λ"/>
	<coords ox="2.5070752239094163" oy="2.2144422081492428" oz="0.07874891763008918" ow="1" vx="-0.41383355346527795" vy="-0.9103504362214384" vz="0.001968069545964017" vw="0"/>
</element>
<command name="Surface">
	<input a0="LensMidplane" a1="(2 * pi)" a2="MirrowCross_{1}"/>
	<output a0="d"/>
</command>
<element type="surfacecartesian3d" label="d">
	<show object="false" label="false" ev="4"/>
	<objColor r="216" g="27" b="96" alpha="0.75"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="1" type="0" typeHidden="1"/>
</element>
<command name="Segment">
	<input a0="IncidentPointA_{1st}" a1="C"/>
	<output a0="C_{→}IncidentPointA"/>
</command>
<element type="segment3d" label="C_{→}IncidentPointA">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
<expression label="n_{Outside}" exp="1"/>
<element type="numeric" label="n_{Outside}">
	<value val="1"/>
	<show object="false" label="true"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
	<layer val="0"/>
	<labelMode val="1"/>
	<animation step="0.1" speed="1" type="0" playing="false"/>
</element>
<expression label="n_{Lens}" exp="1.3"/>
<element type="numeric" label="n_{Lens}">
	<value val="1.3"/>
	<show object="false" label="true"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
	<layer val="0"/>
	<labelMode val="1"/>
	<animation step="0.1" speed="1" type="0" playing="false"/>
</element>
<element type="numeric" label="n_{Vacuum}">
	<value val="1"/>
	<show object="false" label="true"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
	<layer val="0"/>
	<labelMode val="1"/>
	<animation step="0.1" speed="1" type="0" playing="false"/>
</element>
<command name="Segment">
	<input a0="LensSurfaceM_{A}" a1="LensSurfaceM_{B}"/>
	<output a0="ω"/>
</command>
<element type="segment3d" label="ω">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
<command name="Segment">
	<input a0="A" a1="LensSurfaceM_{B}"/>
	<output a0="CurvatureRadius_{A}"/>
</command>
<element type="segment3d" label="CurvatureRadius_{A}">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
<command name="Segment">
	<input a0="B" a1="LensSurfaceM_{A}"/>
	<output a0="CurvatureRadius_{B}"/>
</command>
<element type="segment3d" label="CurvatureRadius_{B}">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
<cascell>
	<cellPair>
		<inputCell>
			<expression value="λ_{A}=abs((((n_{Lens})/(n_{Outside}))-1)*(((1)/(τ))-((1)/(ρ))+(((n_{Lens}-1)*Thickness)/(n_{Lens}*ρ*τ))))"  eval="Evaluate(λ_{A} = abs(((n_{Lens} / n_{Outside} - 1) * (1 / τ - 1 / ρ + (((n_{Lens} - 1) * ω)) / (((n_{Lens} * ρ) * τ))))))" evalCmd=""/>
		</inputCell>
		<outputCell>
			<expression value="21723271 / 192869820 = 21723271 / 192869820" native="true"/>
		</outputCell>
	</cellPair>
</cascell>
<expression label="λ_{A}" exp="abs(((n_{Lens} / n_{Outside} - 1) * (1 / τ - 1 / ρ + ((n_{Lens} - 1) * ω / (((n_{Lens} * ρ) * τ))))))" />
<element type="numeric" label="λ_{A}">
	<value val="0.11263177930066469"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
</element>
<expression label="λ_{B}" exp="abs(((n_{Lens} / n_{Outside} - 1) * (1 / ρ - 1 / τ + ((n_{Lens} - 1) * ω / (((n_{Lens} * ρ) * τ))))))" />
<element type="numeric" label="λ_{B}">
	<value val="0.15403488736600202"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
</element>
<cascell>
	<cellPair>
		<inputCell>
			<expression value="λ_{B}"  eval="Evaluate(λ_{B})" evalCmd=""/>
		</inputCell>
		<outputCell>
			<expression value="29708681 / 192869820" native="true"/>
		</outputCell>
	</cellPair>
</cascell>
<command name="Vector">
	<input a0="LensCenter" a1="A"/>
	<output a0="FocusDirection_{A}"/>
</command>
<element type="vector3d" label="FocusDirection_{A}">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<startPoint exp="LensCenter"/>
	<coords x="-0.263069902117842" y="-0.5787007799255273" z="0.0012510823699108248" w="0"/>
</element>
<expression label="Conics_{1}" exp="{Arc_{Aρ1}, Arc_{Βτ1}}" />
<element type="list" label="Conics_{1}">
	<show object="false" label="true" ev="20"/>
	<objColor r="0" g="100" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<pointSize val="5"/>
	<pointStyle val="0"/>
	<angleStyle val="0"/>
</element>
<expression label="Conics_{2}" exp="{Arc_{Aρ2}, Arc_{Bτ2}}" />
<element type="list" label="Conics_{2}">
	<show object="false" label="true" ev="20"/>
	<objColor r="0" g="100" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<pointSize val="5"/>
	<pointStyle val="0"/>
	<angleStyle val="0"/>
</element>
<expression label="Lenght_{A}" exp="FocusDirection_{A} / abs(FocusDirection_{A})" type="point" />
<element type="point3d" label="Lenght_{A}">
	<show object="false" label="true" ev="20"/>
	<objColor r="68" g="68" b="68" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<pointSize val="4"/>
	<coords x="-0.4138335534652776" y="-0.9103504362214384" z="0.001968069545964389" w="1"/>
</element>
<command name="Segment">
	<input a0="LensCenter" a1="LensCenter + (λ_{A} * Lenght_{A})"/>
	<output a0="FocalLenght_{A}"/>
</command>
<element type="segment3d" label="FocalLenght_{A}">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
<command name="Vector">
	<input a0="LensCenter" a1="B"/>
	<output a0="FocusDirection_{B}"/>
</command>
<element type="vector3d" label="FocusDirection_{B}">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<startPoint exp="LensCenter"/>
	<coords x="0.6729221082275259" y="1.4802930541478596" z="-0.0032002178095970057" w="0"/>
</element>
<expression label="Lenght_{B}" exp="FocusDirection_{B} / abs(FocusDirection_{B})" type="point" />
<element type="point3d" label="Lenght_{B}">
	<show object="false" label="true" ev="20"/>
	<objColor r="68" g="68" b="68" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<pointSize val="4"/>
	<coords x="0.4138335534652781" y="0.9103504362214383" z="-0.001968069545963871" w="1"/>
</element>
<command name="Segment">
	<input a0="LensCenter" a1="LensCenter + (λ_{B} * Lenght_{B})"/>
	<output a0="FocalLenght_{B}"/>
</command>
<element type="segment3d" label="FocalLenght_{B}">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
<command name="Point">
	<input a0="FocalLenght_{B}"/>
	<output a0="Focus_{B}"/>
</command>
<element type="point3d" label="Focus_{B}">
	<show object="false" label="true" ev="20"/>
	<objColor r="204" g="102" b="255" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<fixed val="true"/>
	<pointSize val="4"/>
	<coords x="2.5708200287057124" y="2.3546679350562014" z="0.07844576625924818" w="1"/>
</element>
<command name="Point">
	<input a0="FocalLenght_{A}"/>
	<output a0="Focus_{A}"/>
</command>
<element type="point3d" label="Focus_{A}">
	<show object="false" label="true" ev="20"/>
	<objColor r="204" g="102" b="255" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<fixed val="true"/>
	<pointSize val="4"/>
	<coords x="2.4604644144483054" y="2.111907818730486" z="0.0789705848048386" w="1"/>
</element>
<command name="OrthogonalPlane">
	<input a0="Focus_{A}" a1="Spindle"/>
	<output a0="FocalPlane_{A}"/>
</command>
<element type="plane3d" label="FocalPlane_{A}">
	<show object="false" label="false" ev="4"/>
	<objColor r="99" g="219" b="219" alpha="0.5"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<fading val="0.10000000149011612"/>
	<lineStyle thickness="0" type="0" typeHidden="1"/>
	<eqnStyle style="user"/>
	<coords x="-0.41383355346527795" y="-0.9103504362214384" z="0.001968069545964017" w="2.9406435162437896"/>
</element>
<command name="OrthogonalPlane">
	<input a0="Focus_{B}" a1="Spindle"/>
	<output a0="FocalPlane_{B}"/>
</command>
<element type="plane3d" label="FocalPlane_{B}">
	<show object="false" label="false" ev="4"/>
	<objColor r="99" g="219" b="219" alpha="0.5"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<fading val="0.10000000149011612"/>
	<lineStyle thickness="0" type="0" typeHidden="1"/>
	<eqnStyle style="user"/>
	<coords x="-0.41383355346527795" y="-0.9103504362214384" z="0.001968069545964017" w="3.207310182910455"/>
</element>
<command name="Tangent">
	<input a0="IncidentPointB_{1st}" a1="Arc_{Aρ1}"/>
	<output a0="Tangent_{ArcAρ1,IncidentB}" a1=""/>
</command>
<element type="line3d" label="Tangent_{ArcAρ1,IncidentB}">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<eqnStyle style="parametric" parameter="λ"/>
	<coords ox="3.2068987482531" oy="1.897394827922111" oz="0.16339177742092909" ow="1" vx="-0.30427941372294487" vy="0.9496045969740606" vz="-0.07526717604741297" vw="0"/>
</element>
<command name="OrthogonalLine">
	<input a0="IncidentPointB_{1st}" a1="Arc_{Aρ1}"/>
	<output a0="i"/>
</command>
<element type="line3d" label="i">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<eqnStyle style="parametric" parameter="λ"/>
	<coords ox="3.191441950513098" oy="1.9456328799441525" oz="0.1595683524235178" ow="1" vx="-0.09704734138683602" vy="0.04622544883451629" vz="0.9755302471392056" vw="0"/>
</element>
<command name="Line">
	<input a0="IncidentPointB_{1st}" a1="A"/>
	<output a0="NormalLineB_{1st,InRe}"/>
</command>
<element type="line3d" label="NormalLineB_{1st,InRe}">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<eqnStyle style="parametric" parameter="λ"/>
	<coords ox="3.191441950513098" oy="1.9456328799441525" oz="0.1595683524235178" ow="1" vx="-0.9474366287215239" vy="-0.309891451720437" vz="-0.0795683524235178" vw="0"/>
</element>
<command name="UnitVector">
	<input a0="NormalLineB_{1st,InRe}"/>
	<output a0="UnitVector_{NormalLineA,B,1stB}"/>
</command>
<element type="vector3d" label="UnitVector_{NormalLineA,B,1stB}">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<startPoint exp="IncidentPointB_{1st}"/>
	<coords x="-0.9474366287215241" y="-0.30989145172043703" z="-0.07956835242351781" w="0"/>
</element>
<command name="Translate">
	<input a0="IncidentPointB_{1st}" a1="Vector[(-UnitVector_{NormalLineA,B,1stB})]"/>
	<output a0="Αuxiliary_{B,1st}"/>
</command>
<element type="point3d" label="Αuxiliary_{B,1st}">
	<show object="false" label="true" ev="20"/>
	<objColor r="125" g="125" b="255" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<fixed val="true"/>
	<pointSize val="5"/>
	<coords x="4.138878579234622" y="2.2555243316645894" z="0.2391367048470356" w="1"/>
</element>
<command name="Angle">
	<input a0="LightSource" a1="IncidentPointB_{1st}" a2="Αuxiliary_{B,1st}"/>
	<output a0="β_{1st,Incident}"/>
</command>
<element type="angle3d" label="β_{1st,Incident}">
	<angleStyle val="1"/>
	<value val="0.24682850161989214"/>
	<lineStyle thickness="2" type="0" typeHidden="2" opacity="89"/>
	<arcSize val="30"/>
	<show object="true" label="true" ev="20"/>
	<condition showObject="β_{1st,Incident} &lt; pi / 2"/>
	<objColor r="0" g="153" b="255" alpha="0.1"/>
	<layer val="0"/>
	<labelOffset x="25" y="13"/>
	<labelMode val="1"/>
</element>
<command name="Tangent">
	<input a0="IncidentPointA_{1st}" a1="Arc_{Βτ1}"/>
	<output a0="Tangent_{ArcBτ1,IncidentA}" a1=""/>
</command>
<element type="line3d" label="Tangent_{ArcBτ1,IncidentA}">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<eqnStyle style="parametric" parameter="λ"/>
	<coords ox="3.2192871144722055" oy="0.9423461282080967" oz="0.2098791241144662" ow="1" vx="-1.18919033521981" vy="1.3389524729827305" vz="-0.18174878737759398" vw="0"/>
</element>
<command name="OrthogonalLine">
	<input a0="IncidentPointA_{1st}" a1="Arc_{Βτ1}"/>
	<output a0="h"/>
</command>
<element type="line3d" label="h">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<eqnStyle style="parametric" parameter="λ"/>
	<coords ox="1.840539965032538" oy="2.4947274844010936" oz="-0.0008404008341247049" ow="1" vx="0.2482431514900267" vy="-0.11824281771904224" vz="-2.495366688700758" vw="0"/>
</element>
<command name="Line">
	<input a0="IncidentPointA_{1st}" a1="B"/>
	<output a0="NormalLineA_{1st,InRe}"/>
</command>
<element type="line3d" label="NormalLineA_{1st,InRe}">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<eqnStyle style="parametric" parameter="λ"/>
	<coords ox="1.840539965032538" oy="2.4947274844010936" oz="-0.0008404008341247049" ow="1" vx="1.339457367104404" vy="1.2000077778960088" vz="0.07638910065461688" vw="0"/>
</element>
<command name="UnitVector">
	<input a0="NormalLineA_{1st,InRe}"/>
	<output a0="UnitVector_{NormalLineA,B,1stA}"/>
</command>
<element type="vector3d" label="UnitVector_{NormalLineA,B,1stA}">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<startPoint exp="IncidentPointA_{1st}"/>
	<coords x="0.744142981724669" y="0.6666709877200049" z="0.042438389252564934" w="0"/>
</element>
<command name="Translate">
	<input a0="IncidentPointA_{1st}" a1="Vector[(-UnitVector_{NormalLineA,B,1stA})]"/>
	<output a0="Αuxiliary_{A,1st}"/>
</command>
<element type="point3d" label="Αuxiliary_{A,1st}">
	<show object="false" label="true" ev="20"/>
	<objColor r="125" g="125" b="255" alpha="0"/>
	<layer val="0"/>
	<labelOffset x="-2" y="-14"/>
	<labelMode val="0"/>
	<fixed val="true"/>
	<pointSize val="5"/>
	<coords x="1.096396983307869" y="1.8280564966810888" z="-0.04327879008668964" w="1"/>
</element>
<command name="Angle">
	<input a0="LightSource" a1="IncidentPointA_{1st}" a2="Αuxiliary_{A,1st}"/>
	<output a0="α_{1st,Incident}"/>
</command>
<element type="angle3d" label="α_{1st,Incident}">
	<angleStyle val="1"/>
	<value val="2.2458936818625284"/>
	<lineStyle thickness="2" type="0" typeHidden="2" opacity="89"/>
	<arcSize val="30"/>
	<show object="true" label="true" ev="20"/>
	<condition showObject="α_{1st,Incident} &lt; pi / 2"/>
	<objColor r="255" g="0" b="0" alpha="0.1"/>
	<layer val="0"/>
	<labelOffset x="74" y="-31"/>
	<labelMode val="1"/>
</element>
<command name="If">
	<input a0="α_{1st,Incident} &lt; pi / 2" a1="Plane[LightSource, IncidentPointA_{1st}, Αuxiliary_{A,1st}]" a2="β_{1st,Incident} &lt; pi / 2" a3="Plane[LightSource, IncidentPointB_{1st}, Αuxiliary_{B,1st}]"/>
	<output a0="IntersectionZone_{A,B,1stInRe}"/>
</command>
<element type="plane3d" label="IntersectionZone_{A,B,1stInRe}">
	<show object="false" label="false" ev="4"/>
	<objColor r="0" g="255" b="255" alpha="0.5"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<fading val="0.10000000149011612"/>
	<lineStyle thickness="0" type="0" typeHidden="1"/>
	<eqnStyle style="user"/>
	<coords x="-0.016706590965702876" y="0.021706843324378222" z="0.11438807961574933" w="-0.007168150234874514"/>
</element>
<expression label="α_{1}" exp="(n_{Outside} / n_{Lens} * sin(α_{1st,Incident}))" />
<element type="numeric" label="α_{1}">
	<value val="0.6004970080863354"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
</element>
<command name="Mirror">
	<input a0="Αuxiliary_{A,1st}" a1="IncidentPointA_{1st}"/>
	<output a0="Αuxiliary_{A,1st,Symmetry}"/>
</command>
<element type="point3d" label="Αuxiliary_{A,1st,Symmetry}">
	<show object="false" label="true" ev="20"/>
	<objColor r="125" g="125" b="255" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<pointSize val="5"/>
	<coords x="2.584682946757207" y="3.1613984721210984" z="0.04159798841844023" w="1"/>
</element>
<command name="Rotate">
	<input a0="Αuxiliary_{A,1st,Symmetry}" a1="asin(α_{1})" a2="IncidentPointA_{1st}" a3="IntersectionZone_{A,B,1stInRe}"/>
	<output a0="Rotate_{A,1st,Refrection}"/>
</command>
<element type="point3d" label="Rotate_{A,1st,Refrection}">
	<show object="false" label="true" ev="20"/>
	<objColor r="125" g="125" b="255" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<pointSize val="5"/>
	<coords x="2.049284650776389" y="3.4681723148262984" z="-0.0948128345162661" w="1"/>
</element>
<command name="If">
	<input a0="α_{1st,Incident} &lt; pi / 2" a1="Angle[Αuxiliary_{A,1st,Symmetry}, IncidentPointA_{1st}, Rotate_{A,1st,Refrection}, IntersectionZone_{A,B,1stInRe}]"/>
	<output a0="α_{1st,Refraction}"/>
</command>
<element type="angle3d" label="α_{1st,Refraction}">
	<angleStyle val="0"/>
	<value val="NaN"/>
	<lineStyle thickness="2" type="0" typeHidden="2" opacity="89"/>
	<arcSize val="30"/>
	<show object="false" label="true" ev="20"/>
	<objColor r="255" g="0" b="0" alpha="0.1"/>
	<layer val="0"/>
	<labelOffset x="-72" y="35"/>
	<labelMode val="1"/>
</element>
<expression label="α_{1}&apos;" exp="sin(α_{1st,Refraction})" />
<element type="numeric" label="α_{1}&apos;">
	<value val="NaN"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
</element>
<command name="Mirror">
	<input a0="Αuxiliary_{B,1st}" a1="IncidentPointB_{1st}"/>
	<output a0="Αuxiliary_{B,1st,Symmetry}"/>
</command>
<element type="point3d" label="Αuxiliary_{B,1st,Symmetry}">
	<show object="false" label="true" ev="20"/>
	<objColor r="125" g="125" b="255" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<pointSize val="5"/>
	<coords x="2.2440053217915743" y="1.6357414282237155" z="0.07999999999999999" w="1"/>
</element>
<expression label="β_{1}" exp="(n_{Outside} / n_{Lens} * sin(β_{1st,Incident}))" />
<element type="numeric" label="β_{1}">
	<value val="0.1879460122975561"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
</element>
<command name="Rotate">
	<input a0="Αuxiliary_{B,1st,Symmetry}" a1="asin(β_{1})" a2="IncidentPointB_{1st}" a3="IntersectionZone_{A,B,1stInRe}"/>
	<output a0="Rotate_{B,1st,Refrection}"/>
</command>
<element type="point3d" label="Rotate_{B,1st,Refrection}">
	<show object="false" label="true" ev="20"/>
	<objColor r="125" g="125" b="255" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<pointSize val="5"/>
	<coords x="2.314770955374216" y="1.4659686397929215" z="0.12255236935749628" w="1"/>
</element>
<expression label="F_{1}" exp="C" type="point" />
<element type="point3d" label="F_{1}">
	<show object="true" label="true" ev="20"/>
	<objColor r="68" g="68" b="68" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<pointSize val="4"/>
	<coords x="2.6532247177009403" y="2.1480427694205178" z="0.09643444170859872" w="1"/>
</element>
<expression label="F_{2}" exp="C" type="point" />
<element type="point3d" label="F_{2}">
	<show object="true" label="true" ev="20"/>
	<objColor r="68" g="68" b="68" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<pointSize val="4"/>
	<coords x="2.6532247177009403" y="2.1480427694205178" z="0.09643444170859872" w="1"/>
</element>
<command name="If">
	<input a0="α_{1st,Incident} &lt; pi / 2" a1="Ray[IncidentPointA_{1st}, Rotate_{A,1st,Refrection}]" a2="β_{1st,Incident} &lt; pi / 2" a3="Ray[IncidentPointB_{1st}, Rotate_{B,1st,Refrection}]" a4="Ray[F_{1}, F_{2}]"/>
	<output a0="LightRefraction_{A,B,1st}"/>
</command>
<element type="ray3d" label="LightRefraction_{A,B,1st}">
	<show object="false" label="false" ev="20"/>
	<objColor r="153" g="51" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<eqnStyle style="parametric" parameter="λ"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
<command name="If">
	<input a0="α_{1st,Incident} &lt; pi / 2" a1="Plane[A, LightRefraction_{A,B,1st}]" a2="β_{1st,Incident} &lt; pi / 2" a3="Plane[B, LightRefraction_{A,B,1st}]"/>
	<output a0="IntersectionFindingZone_{A,B,2ndInRe}"/>
</command>
<element type="plane3d" label="IntersectionFindingZone_{A,B,2ndInRe}">
	<show object="false" label="false" ev="4"/>
	<objColor r="255" g="0" b="0" alpha="0.5"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<fading val="0.10000000149011612"/>
	<lineStyle thickness="0" type="0" typeHidden="1"/>
	<eqnStyle style="user"/>
	<coords x="0.10504596698951538" y="-0.07323395865870878" z="-1.53887690031437" w="0.05279434367807519"/>
</element>
<command name="If">
	<input a0="α_{1st,Incident} &lt; pi / 2" a1="Circle[A, ρ, IntersectionFindingZone_{A,B,2ndInRe}]" a2="β_{1st,Incident} &lt; pi / 2" a3="Circle[B, τ, IntersectionFindingZone_{A,B,2ndInRe}]"/>
	<output a0="Circle_{A,B,2ndInRe}"/>
</command>
<element type="conic3d" label="Circle_{A,B,2ndInRe}">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<eqnStyle style="parametric"/>
	<eigenvectors x0="1" y0="0" z0="1.0" x1="0" y1="1" z1="1.0"/>
	<matrix A0="1" A1="1" A2="-3.24" A3="0" A4="0" A5="0"/>
</element>
<command name="Intersect">
	<input a0="LensMidplane" a1="Circle_{A,B,2ndInRe}" a2="1"/>
	<output a0="Vertex_{A,B,2ndInRe→1}"/>
</command>
<element type="point3d" label="Vertex_{A,B,2ndInRe→1}">
	<show object="false" label="true" ev="20"/>
	<objColor r="68" g="68" b="68" alpha="0"/>
	<layer val="0"/>
	<labelOffset x="-72" y="-26"/>
	<labelMode val="0"/>
	<pointSize val="4"/>
	<coords x="3.2057014736999623" y="1.8970375619004736" z="0.16285434164952936" w="1"/>
</element>
<command name="Intersect">
	<input a0="LensMidplane" a1="Circle_{A,B,2ndInRe}" a2="2"/>
	<output a0="Vertex_{A,B,2ndInRe→2}"/>
</command>
<element type="point3d" label="Vertex_{A,B,2ndInRe→2}">
	<show object="false" label="true" ev="20"/>
	<objColor r="68" g="68" b="68" alpha="0"/>
	<layer val="0"/>
	<labelOffset x="43" y="8"/>
	<labelMode val="0"/>
	<pointSize val="4"/>
	<coords x="1.8053294110202165" y="2.5333564961431674" z="0.03698099079618406" w="1"/>
</element>
<command name="CircleArc">
	<input a0="A" a1="Vertex_{A,B,2ndInRe→1}" a2="Vertex_{A,B,2ndInRe→2}"/>
	<output a0="ArcAB_{2nd,Incident}"/>
</command>
<element type="conicpart" label="ArcAB_{2nd,Incident}">
	<show object="false" label="false" ev="20"/>
	<objColor r="102" g="153" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<eqnStyle style="parametric"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
	<eigenvectors x0="1" y0="0" z0="1.0" x1="0" y1="1" z1="1.0"/>
	<matrix A0="1" A1="1" A2="-1.0000000000000004" A3="0" A4="0" A5="0"/>
</element>
<command name="If">
	<input a0="α_{1st,Incident} &lt; pi / 2" a1="CircleArc[A, Vertex_{A,B,2ndInRe→1}, Vertex_{A,B,2ndInRe→2}]" a2="β_{1st,Incident} &lt; pi / 2" a3="CircleArc[B, Vertex_{A,B,2ndInRe→1}, Vertex_{A,B,2ndInRe→2}]"/>
	<output a0="Arc_{A,B,2ndInRe}"/>
</command>
<element type="conicpart" label="Arc_{A,B,2ndInRe}">
	<show object="true" label="false" ev="20"/>
	<objColor r="102" g="153" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="4" type="0" typeHidden="1"/>
	<eqnStyle style="parametric"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
	<eigenvectors x0="1" y0="0" z0="1.0" x1="0" y1="1" z1="1.0"/>
	<matrix A0="1" A1="1" A2="-3.2399999999999984" A3="0" A4="0" A5="0"/>
</element>
<command name="If">
	<input a0="α_{1st,Incident} &lt; pi / 2" a1="Intersect[LightRefraction_{A,B,1st}, Arc_{A,B,2ndInRe}, 1]" a2="β_{1st,Incident} &lt; pi / 2" a3="Intersect[LightRefraction_{A,B,1st}, Arc_{A,B,2ndInRe}, 1]"/>
	<output a0="IncidentPoint_{A,B,2ndInRe}"/>
</command>
<element type="point3d" label="IncidentPoint_{A,B,2ndInRe}">
	<show object="true" label="true" ev="20"/>
	<objColor r="204" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelOffset x="8" y="24"/>
	<labelMode val="0"/>
	<pointSize val="4"/>
	<coords x="3.10458823864613" y="1.8981114951396016" z="0.15590109806525138" w="1"/>
</element>
<command name="If">
	<input a0="α_{1st,Incident} &lt; pi / 2" a1="Segment[LightSource, IncidentPointA_{1st}]" a2="β_{1st,Incident} &lt; pi / 2" a3="Segment[LightSource, IncidentPointB_{1st}]"/>
	<output a0="IncidentSegment_{A,B,1st}"/>
</command>
<element type="segment3d" label="IncidentSegment_{A,B,1st}">
	<show object="true" label="false" ev="20"/>
	<objColor r="153" g="51" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
<command name="If">
	<input a0="β_{1st,Incident} &lt; pi / 2" a1="Angle[Αuxiliary_{B,1st,Symmetry}, IncidentPointB_{1st}, Rotate_{B,1st,Refrection}, IntersectionZone_{A,B,1stInRe}]"/>
	<output a0="β_{1st,Refraction}"/>
</command>
<element type="angle3d" label="β_{1st,Refraction}">
	<angleStyle val="0"/>
	<value val="0.18907047119710302"/>
	<lineStyle thickness="2" type="0" typeHidden="2" opacity="89"/>
	<arcSize val="30"/>
	<show object="false" label="true" ev="20"/>
	<objColor r="0" g="153" b="255" alpha="0.1"/>
	<layer val="0"/>
	<labelMode val="1"/>
</element>
<expression label="β_{1}&apos;" exp="sin(β_{1st,Refraction})" />
<element type="numeric" label="β_{1}&apos;">
	<value val="0.1879460122975555"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
</element>
<command name="If">
	<input a0="β_{1st,Incident} &lt; pi / 2" a1="Intersect[LightRefraction_{A,B,1st}, Arc_{A,B,2ndInRe}, 1]"/>
	<output a0="IncidentPointB_{2nd,Striped}"/>
</command>
<element type="point3d" label="IncidentPointB_{2nd,Striped}">
	<show object="true" label="true" ev="20"/>
	<objColor r="0" g="153" b="255" alpha="0"/>
	<layer val="0"/>
	<labelOffset x="3" y="80"/>
	<labelMode val="0"/>
	<pointSize val="4"/>
	<coords x="3.10458823864613" y="1.8981114951396016" z="0.15590109806525138" w="1"/>
</element>
<command name="If">
	<input a0="α_{1st,Incident} &lt; pi / 2" a1="Tangent[IncidentPoint_{A,B,2ndInRe}, Arc_{A,B,2ndInRe}]" a2="β_{1st,Incident} &lt; pi / 2" a3="Tangent[IncidentPoint_{A,B,2ndInRe}, Arc_{A,B,2ndInRe}]"/>
	<output a0="Tangent_{2nd,IncidentA,B}"/>
</command>
<element type="line3d" label="Tangent_{2nd,IncidentA,B}">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<eqnStyle style="parametric" parameter="λ"/>
	<coords ox="3.205742289736798" oy="1.8941829676173405" oz="0.16299297574023075" ow="1" vx="-1.7942463882482944" vy="0.06968328249783885" vz="-0.12579403164807493" vw="0"/>
</element>
<command name="If">
	<input a0="α_{1st,Incident} &lt; pi / 2" a1="OrthogonalLine[IncidentPoint_{A,B,2ndInRe}, Arc_{A,B,2ndInRe}]" a2="β_{1st,Incident} &lt; pi / 2" a3="OrthogonalLine[IncidentPoint_{A,B,2ndInRe}, Arc_{A,B,2ndInRe}]"/>
	<output a0="k"/>
</command>
<element type="line3d" label="k">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<eqnStyle style="parametric" parameter="λ"/>
	<coords ox="3.10458823864613" oy="1.8981114951396016" oz="0.15590109806525138" ow="1" vx="0.1707280004082496" vy="-0.11902491530236181" vz="-2.5010896048140583" vw="0"/>
</element>
<command name="If">
	<input a0="α_{1st,Incident} &lt; pi / 2" a1="OrthogonalLine[Tangent_{2nd,IncidentA,B}, k]" a2="β_{1st,Incident} &lt; pi / 2" a3="OrthogonalLine[Tangent_{2nd,IncidentA,B}, k]"/>
	<output a0="NormalLine_{A,B,2ndInRe}"/>
</command>
<element type="line3d" label="NormalLine_{A,B,2ndInRe}">
	<show object="false" label="false" ev="20"/>
	<objColor r="255" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="20" typeHidden="1"/>
	<eqnStyle style="parametric" parameter="λ"/>
	<coords ox="3.10458823864613" oy="1.898111495139602" oz="0.15590109806525138" ow="1" vx="-0.18925675744712084" vy="-4.509047553609546" vz="0.20166313691008245" vw="0"/>
</element>
<command name="If">
	<input a0="α_{1st,Incident} &lt; pi / 2" a1="Vector[UnitVector[NormalLine_{A,B,2ndInRe}]]" a2="β_{1st,Incident} &lt; pi / 2" a3="Vector[UnitVector[NormalLine_{A,B,2ndInRe}]]"/>
	<output a0="UnitVector_{NormalLineA,B,2nd}"/>
</command>
<element type="vector3d" label="UnitVector_{NormalLineA,B,2nd}">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<coords x="-0.04189394082822893" y="-0.9981243150875005" z="0.04464022124708842" w="0"/>
</element>
<command name="Translate">
	<input a0="IncidentPoint_{A,B,2ndInRe}" a1="Vector[(-UnitVector_{NormalLineA,B,2nd})]"/>
	<output a0="Αuxiliary_{B,2nd}"/>
</command>
<element type="point3d" label="Αuxiliary_{B,2nd}">
	<show object="false" label="true" ev="20"/>
	<objColor r="125" g="125" b="255" alpha="0"/>
	<layer val="0"/>
	<labelOffset x="-1" y="54"/>
	<labelMode val="0"/>
	<pointSize val="5"/>
	<coords x="3.146482179474359" y="2.896235810227102" z="0.11126087681816296" w="1"/>
</element>
<command name="Translate">
	<input a0="IncidentPoint_{A,B,2ndInRe}" a1="Vector[(-UnitVector_{NormalLineA,B,2nd})]"/>
	<output a0="Αuxiliary_{A,2nd}"/>
</command>
<element type="point3d" label="Αuxiliary_{A,2nd}">
	<show object="false" label="true" ev="20"/>
	<objColor r="125" g="125" b="255" alpha="0"/>
	<layer val="0"/>
	<labelOffset x="-77" y="20"/>
	<labelMode val="0"/>
	<pointSize val="5"/>
	<coords x="3.146482179474359" y="2.896235810227102" z="0.11126087681816296" w="1"/>
</element>
<command name="If">
	<input a0="α_{1st,Incident} &lt; pi / 2" a1="Plane[IncidentPointA_{1st}, IncidentPoint_{A,B,2ndInRe}, Αuxiliary_{A,2nd}]" a2="β_{1st,Incident} &lt; pi / 2" a3="Plane[IncidentPointB_{1st}, IncidentPoint_{A,B,2ndInRe}, Αuxiliary_{B,2nd}]"/>
	<output a0="IntersectionZone_{A,B,2ndInRe}"/>
</command>
<element type="plane3d" label="IntersectionZone_{A,B,2ndInRe}">
	<show object="false" label="false" ev="4"/>
	<objColor r="51" g="255" b="0" alpha="0.15"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<fading val="0.10000000149011612"/>
	<lineStyle thickness="0" type="0" typeHidden="1"/>
	<eqnStyle style="user"/>
	<coords x="0.005781740876239501" y="-0.004030804650959603" z="-0.0846999435869473" w="0.0029058061306457984"/>
</element>
<command name="Angle">
	<input a0="Αuxiliary_{B,2nd}" a1="IncidentPoint_{A,B,2ndInRe}" a2="IncidentPointB_{1st}" a3="IntersectionZone_{A,B,2ndInRe}"/>
	<output a0="β_{2nd,Incident}"/>
</command>
<element type="angle3d" label="β_{2nd,Incident}">
	<angleStyle val="0"/>
	<value val="1.0311421535607734"/>
	<lineStyle thickness="2" type="0" typeHidden="2" opacity="89"/>
	<arcSize val="30"/>
	<show object="false" label="true" ev="20"/>
	<objColor r="0" g="100" b="0" alpha="0.10000000149011612"/>
	<layer val="0"/>
	<labelMode val="1"/>
</element>
<expression label="β_{2}" exp="(n_{Lens} / n_{Outside} * sin(β_{2nd,Incident}))" />
<element type="numeric" label="β_{2}">
	<value val="1.1152523616756158"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
</element>
<command name="Mirror">
	<input a0="Αuxiliary_{B,2nd}" a1="IncidentPoint_{A,B,2ndInRe}"/>
	<output a0="Αuxiliary_{B,2nd,Symmetry}"/>
</command>
<element type="point3d" label="Αuxiliary_{B,2nd,Symmetry}">
	<show object="false" label="true" ev="20"/>
	<objColor r="125" g="125" b="255" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<pointSize val="5"/>
	<coords x="3.062694297817901" y="0.8999871800521011" z="0.2005413193123398" w="1"/>
</element>
<command name="Rotate">
	<input a0="Αuxiliary_{B,2nd,Symmetry}" a1="asin(β_{2})" a2="IncidentPoint_{A,B,2ndInRe}" a3="IntersectionZone_{A,B,2ndInRe}"/>
	<output a0="Rotate_{B,2nd,Refrection}"/>
</command>
<element type="point3d" label="Rotate_{B,2nd,Refrection}">
	<show object="false" label="true" ev="20"/>
	<objColor r="125" g="125" b="255" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<pointSize val="5"/>
	<coords x="NaN" y="NaN" z="NaN" w="NaN"/>
</element>
<command name="Angle">
	<input a0="Αuxiliary_{B,2nd,Symmetry}" a1="IncidentPoint_{A,B,2ndInRe}" a2="Rotate_{B,2nd,Refrection}" a3="IntersectionZone_{A,B,2ndInRe}"/>
	<output a0="β_{2nd,Refraction}"/>
</command>
<element type="angle3d" label="β_{2nd,Refraction}">
	<angleStyle val="0"/>
	<value val="NaN"/>
	<lineStyle thickness="2" type="0" typeHidden="2" opacity="89"/>
	<arcSize val="30"/>
	<show object="false" label="true" ev="20"/>
	<objColor r="0" g="100" b="0" alpha="0.10000000149011612"/>
	<layer val="0"/>
	<labelMode val="1"/>
</element>
<command name="Angle">
	<input a0="Αuxiliary_{A,2nd}" a1="IncidentPoint_{A,B,2ndInRe}" a2="IncidentPointA_{1st}" a3="IntersectionZone_{A,B,2ndInRe}"/>
	<output a0="α_{2nd,Incident}"/>
</command>
<element type="angle3d" label="α_{2nd,Incident}">
	<angleStyle val="0"/>
	<value val="5.113784975013942"/>
	<lineStyle thickness="2" type="0" typeHidden="2" opacity="89"/>
	<arcSize val="30"/>
	<show object="false" label="true" ev="20"/>
	<objColor r="0" g="100" b="0" alpha="0.10000000149011612"/>
	<layer val="0"/>
	<labelOffset x="5" y="33"/>
	<labelMode val="1"/>
</element>
<command name="Mirror">
	<input a0="Αuxiliary_{A,2nd}" a1="IncidentPoint_{A,B,2ndInRe}"/>
	<output a0="Αuxiliary_{A,2nd,Symmetry}"/>
</command>
<element type="point3d" label="Αuxiliary_{A,2nd,Symmetry}">
	<show object="false" label="true" ev="20"/>
	<objColor r="125" g="125" b="255" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<pointSize val="5"/>
	<coords x="3.062694297817901" y="0.8999871800521011" z="0.2005413193123398" w="1"/>
</element>
<expression label="α_{2}" exp="(n_{Lens} / n_{Outside} * sin(α_{2nd,Incident}))" />
<element type="numeric" label="α_{2}">
	<value val="-1.196671412017783"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
</element>
<expression label="β_{2}&apos;" exp="sin(β_{2nd,Refraction})" />
<element type="numeric" label="β_{2}&apos;">
	<value val="NaN"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
</element>
<command name="Rotate">
	<input a0="Αuxiliary_{A,2nd,Symmetry}" a1="asin(α_{2})" a2="IncidentPoint_{A,B,2ndInRe}" a3="IntersectionZone_{A,B,2ndInRe}"/>
	<output a0="Rotate_{A,2nd,Refrection}"/>
</command>
<element type="point3d" label="Rotate_{A,2nd,Refrection}">
	<show object="false" label="true" ev="20"/>
	<objColor r="125" g="125" b="255" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<fixed val="true"/>
	<pointSize val="5"/>
	<coords x="NaN" y="NaN" z="NaN" w="NaN"/>
</element>
<command name="Angle">
	<input a0="Αuxiliary_{A,2nd,Symmetry}" a1="IncidentPoint_{A,B,2ndInRe}" a2="Rotate_{A,2nd,Refrection}" a3="IntersectionZone_{A,B,2ndInRe}"/>
	<output a0="α_{2nd,Refraction}"/>
</command>
<element type="angle3d" label="α_{2nd,Refraction}">
	<angleStyle val="0"/>
	<value val="NaN"/>
	<lineStyle thickness="2" type="0" typeHidden="2" opacity="89"/>
	<arcSize val="30"/>
	<show object="true" label="true" ev="20"/>
	<objColor r="0" g="100" b="0" alpha="0.10000000149011612"/>
	<layer val="0"/>
	<labelOffset x="-42" y="-53"/>
	<labelMode val="1"/>
</element>
<expression label="α_{2}&apos;" exp="sin(α_{2nd,Refraction})" />
<element type="numeric" label="α_{2}&apos;">
	<value val="NaN"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
</element>
<command name="Mirror">
	<input a0="LightSource" a1="Plane[LensMidplane]"/>
	<output a0="LightSource_{Symmetry}"/>
</command>
<element type="point3d" label="LightSource_{Symmetry}">
	<show object="false" label="true" ev="20"/>
	<objColor r="51" g="255" b="204" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<pointSize val="5"/>
	<coords x="3.2366872652663843" y="1.4007851857829086" z="0.17269686709638227" w="1"/>
</element>
<command name="Angle">
	<input a0="Vertex_{1→1}" a1="A" a2="Vertex_{1→2}"/>
	<output a0="Angleα"/>
</command>
<element type="angle3d" label="Angleα">
	<angleStyle val="1"/>
	<value val="1.7637882610605349"/>
	<lineStyle thickness="2" type="0" typeHidden="2" opacity="89"/>
	<arcSize val="30"/>
	<show object="false" label="true" ev="20"/>
	<objColor r="0" g="100" b="0" alpha="0.10000000149011612"/>
	<layer val="0"/>
	<labelMode val="1"/>
</element>
<expression label="Value_{Angleα}" exp="Angleα + 0" />
<element type="numeric" label="Value_{Angleα}">
	<value val="1.7637882610605349"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
</element>
<element type="numeric" label="ϕ">
	<value val="25"/>
	<slider min="0.0000" max="200" absoluteScreenLocation="true" width="200" x="38" y="58" fixed="false" horizontal="true" showAlgebra="true"/>
	<lineStyle thickness="10" type="0" typeHidden="1"/>
	<show object="false" label="true"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
	<layer val="0"/>
	<labelMode val="1"/>
	<animation step="1.0000" speed="1" type="0" playing="false"/>
</element>
<expression label="σ" exp="(ϕ * Value_{Angleα})" />
<element type="numeric" label="σ">
	<value val="44.09470652651337"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
</element>
<expression label="A_{χ}" exp="x(A)" />
<element type="numeric" label="A_{χ}">
	<value val="2.2440053217915743"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
</element>
<expression label="A_{υ}" exp="y(A)" />
<element type="numeric" label="A_{υ}">
	<value val="1.6357414282237155"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
</element>
<expression label="A_{ζ}" exp="z(A)" />
<element type="numeric" label="A_{ζ}">
	<value val="0.08"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
</element>
<expression label="B_{χ}" exp="x(B)" />
<element type="numeric" label="B_{χ}">
	<value val="3.179997332136942"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
</element>
<expression label="B_{υ}" exp="y(B)" />
<element type="numeric" label="B_{υ}">
	<value val="3.6947352622971024"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
</element>
<expression label="B_{ζ}" exp="z(B)" />
<element type="numeric" label="B_{ζ}">
	<value val="0.07554869982049217"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
</element>
<command name="OrthogonalPlane">
	<input a0="LensCenter" a1="yAxis"/>
	<output a0="LensExtension_{Y}"/>
</command>
<element type="plane3d" label="LensExtension_{Y}">
	<show object="false" label="false" ev="4"/>
	<objColor r="99" g="219" b="219" alpha="0.5"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<fading val="0.10000000149011612"/>
	<lineStyle thickness="0" type="0" typeHidden="1"/>
	<eqnStyle style="user"/>
	<coords x="0" y="1" z="0" w="-2.2144422081492428"/>
</element>
<command name="Angle">
	<input a0="LensExtension_{Y}" a1="LensExtension"/>
	<output a0="AngleObtuse_Y"/>
</command>
<element type="angle3d" label="AngleObtuse_Y">
	<angleStyle val="1"/>
	<value val="2.714926396704902"/>
	<lineStyle thickness="2" type="0" typeHidden="2" opacity="89"/>
	<arcSize val="30"/>
	<show object="false" label="true" ev="20"/>
	<objColor r="0" g="100" b="0" alpha="0.10000000149011612"/>
	<layer val="0"/>
	<labelMode val="1"/>
</element>
<expression label="AngleObtuse_{Acute}" exp="pi - AngleObtuse_Y" />
<element type="numeric" label="AngleObtuse_{Acute}">
	<value val="0.4266662568848911"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
</element>
<command name="Plane">
	<input a0="A" a1="LensExtension"/>
	<output a0="LensMidplane_{CenterA}"/>
</command>
<element type="plane3d" label="LensMidplane_{CenterA}">
	<show object="false" label="false" ev="4"/>
	<objColor r="99" g="219" b="219" alpha="0.5"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<fading val="0.10000000149011612"/>
	<lineStyle thickness="0" type="0" typeHidden="1"/>
	<eqnStyle style="user"/>
	<coords x="-0.41383355346527795" y="-0.9103504362214384" z="0.001968069545964017" w="2.4175851734772627"/>
</element>
<command name="Area">
	<input a0="LensMidplane"/>
	<output a0="Area_{LensMidplane}"/>
</command>
<element type="numeric" label="Area_{LensMidplane}">
	<value val="1.872068994935738"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
</element>
<command name="Segment">
	<input a0="A" a1="LensCenter"/>
	<output a0="CenterDistance_{A}"/>
</command>
<element type="segment3d" label="CenterDistance_{A}">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
<command name="Segment">
	<input a0="B" a1="LensCenter"/>
	<output a0="CenterDistance_{B}"/>
</command>
<element type="segment3d" label="CenterDistance_{B}">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
<expression label="BaseAngleα" exp="(pi - Angleα) / 2" />
<element type="numeric" label="BaseAngleα">
	<value val="0.6889021962646291"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
</element>
<command name="Angle">
	<input a0="Vertex_{1→1}" a1="B" a2="Vertex_{1→2}"/>
	<output a0="Angleβ"/>
</command>
<element type="angle3d" label="Angleβ">
	<angleStyle val="1"/>
	<value val="0.8864564186883607"/>
	<lineStyle thickness="2" type="0" typeHidden="2" opacity="89"/>
	<arcSize val="30"/>
	<show object="false" label="true" ev="20"/>
	<objColor r="0" g="100" b="0" alpha="0.10000000149011612"/>
	<layer val="0"/>
	<labelMode val="1"/>
</element>
<expression label="BaseAngleβ" exp="(pi - Angleβ) / 2" />
<element type="numeric" label="BaseAngleβ">
	<value val="1.1275681174507162"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
</element>
<expression label="φ_{Height,Latitude}" exp="{0, pi}"/>
<element type="list" label="φ_{Height,Latitude}">
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
	<animation step="0.1" speed="1" type="0" playing="false"/>
	<lineStyle thickness="10" type="0" typeHidden="1"/>
	<pointSize val="5"/>
	<pointStyle val="0"/>
	<angleStyle val="0"/>
</element>
<expression label="θ_{Width,Longitude}" exp="{0, (2 * pi)}"/>
<element type="list" label="θ_{Width,Longitude}">
	<objColor r="0" g="100" b="0" alpha="0.10000000149011612"/>
	<animation step="1" speed="1" type="0" playing="false"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<pointSize val="5"/>
	<pointStyle val="0"/>
	<angleStyle val="0"/>
	<symbolic val="true" />
</element>
<expression label="textθ" exp="&quot;θ →Width&quot;"/>
<element type="text" label="textθ">
	<show object="true" label="true" ev="21"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<fixed val="true"/>
	<isLaTeX val="true"/>
	<font serif="false" sizeM="1" size="0" style="0"/>
	<absoluteScreenLocation x="60" y="53"/>
</element>
<expression label="textφ" exp="&quot;φ →Height&quot;"/>
<element type="text" label="textφ">
	<show object="true" label="true" ev="21"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<fixed val="true"/>
	<isLaTeX val="true"/>
	<font serif="false" sizeM="1" size="0" style="0"/>
	<absoluteScreenLocation x="160" y="53"/>
</element>
<command name="Sequence">
	<input a0="CurveCartesian[(A_{χ} + ((ρ * sin(φ)) * cos(θ)), A_{υ} + ((ρ * sin(φ)) * sin(θ)), A_{ζ} + (ρ * cos(φ))), φ, 0 + BaseAngleα, pi - BaseAngleα]" a1="θ" a2="AngleObtuse_{Acute} + BaseAngleα" a3="pi + AngleObtuse_{Acute} - BaseAngleα" a4="pi / σ"/>
	<output a0="SphereExperimental"/>
</command>
<element type="list" label="SphereExperimental">
	<show object="false" label="true" ev="20"/>
	<objColor r="0" g="100" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="1" type="0" typeHidden="1"/>
	<pointSize val="5"/>
	<pointStyle val="0"/>
	<angleStyle val="0"/>
</element>
<command name="If">
	<input a0="A_{χ} ≤ B_{χ}" a1="Sequence[CurveCartesian[(A_{χ} + ((ρ * sin(φ)) * cos(θ)), A_{υ} + ((ρ * sin(φ)) * sin(θ)), A_{ζ} + (ρ * cos(φ))), φ, 0 + BaseAngleα, pi - BaseAngleα], θ, (-AngleObtuse_{Acute}) + BaseAngleα, pi - AngleObtuse_{Acute} - BaseAngleα, pi / σ]" a2="A_{χ} &gt; B_{χ}" a3="Sequence[CurveCartesian[(A_{χ} + ((ρ * sin(φ)) * cos(θ)), A_{υ} + ((ρ * sin(φ)) * sin(θ)), A_{ζ} + (ρ * cos(φ))), φ, 0 + BaseAngleα, pi - BaseAngleα], θ, AngleObtuse_{Acute} + BaseAngleα, pi + AngleObtuse_{Acute} - BaseAngleα, pi / σ]"/>
	<output a0="SphereA"/>
</command>
<element type="list" label="SphereA">
	<show object="false" label="false" ev="20"/>
	<objColor r="204" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<fixed val="true"/>
	<lineStyle thickness="1" type="0" typeHidden="1"/>
	<pointSize val="5"/>
	<pointStyle val="0"/>
	<angleStyle val="0"/>
</element>
<command name="OrthogonalPlane">
	<input a0="LensCenter" a1="xAxis"/>
	<output a0="LensExtension_{X}"/>
</command>
<element type="plane3d" label="LensExtension_{X}">
	<show object="false" label="false" ev="4"/>
	<objColor r="99" g="219" b="219" alpha="0.5"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<fading val="0.10000000149011612"/>
	<lineStyle thickness="0" type="0" typeHidden="1"/>
	<eqnStyle style="user"/>
	<coords x="1" y="0" z="0" w="-2.5070752239094163"/>
</element>
<command name="Angle">
	<input a0="LensExtension_{X}" a1="LensExtension"/>
	<output a0="AngleObtuse_X"/>
</command>
<element type="angle3d" label="AngleObtuse_X">
	<angleStyle val="1"/>
	<value val="1.9974574430820748"/>
	<lineStyle thickness="2" type="0" typeHidden="2" opacity="178"/>
	<arcSize val="30"/>
	<show object="false" label="true" ev="20"/>
	<objColor r="0" g="100" b="0" alpha="0.10000000149011612"/>
	<layer val="0"/>
	<labelOffset x="-23" y="26"/>
	<labelMode val="1"/>
</element>
<command name="If">
	<input a0="A_{χ} ≤ B_{χ}" a1="Sequence[CurveCartesian[(B_{χ} + ((τ * sin(φ)) * cos(θ)), B_{υ} + ((τ * sin(φ)) * sin(θ)), B_{ζ} + (τ * cos(φ))), φ, 0 + BaseAngleβ, pi - BaseAngleβ], θ, (-pi) - AngleObtuse_{Acute} + BaseAngleβ, (-AngleObtuse_{Acute}) - BaseAngleβ, pi / ((2 * σ))]" a2="A_{χ} &gt; B_{χ}" a3="Sequence[CurveCartesian[(B_{χ} + ((τ * sin(φ)) * cos(θ)), B_{υ} + ((τ * sin(φ)) * sin(θ)), B_{ζ} + (τ * cos(φ))), φ, 0 + BaseAngleβ, pi - BaseAngleβ], θ, (-pi) + AngleObtuse_{Acute} + BaseAngleβ, AngleObtuse_{Acute} - BaseAngleβ, pi / ((2 * σ))]"/>
	<output a0="SphereB"/>
</command>
<element type="list" label="SphereB">
	<show object="false" label="true" ev="20"/>
	<objColor r="0" g="0" b="255" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="1" type="0" typeHidden="1"/>
	<pointSize val="5"/>
	<pointStyle val="0"/>
	<angleStyle val="0"/>
</element>
<element type="numeric" label="ψ">
	<value val="2"/>
	<slider min="1" max="ϕ" absoluteScreenLocation="true" width="200" x="38" y="98" fixed="false" horizontal="true" showAlgebra="true"/>
	<lineStyle thickness="10" type="0" typeHidden="1"/>
	<show object="false" label="true"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
	<layer val="0"/>
	<labelMode val="1"/>
	<animation step="1" speed="1" type="0" playing="false"/>
</element>
<command name="Element" type="curvecartesian3d">
	<input a0="SphereA" a1="ψ"/>
	<output a0="c"/>
</command>
<element type="curvecartesian3d" label="c">
	<show object="false" label="false" ev="20"/>
	<objColor r="204" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
</element>
<command name="Sequence">
	<input a0="{{sin(((κ * pi)) / ϕ), 0, 0}, {0, sin(((κ * pi)) / ϕ), 0}, {0, 0, sin(((κ * pi)) / ϕ)}}" a1="κ" a2="1" a3="ϕ" a4="1"/>
	<output a0="Matrix_{Seq}"/>
</command>
<element type="list" label="Matrix_{Seq}">
	<objColor r="0" g="100" b="0" alpha="0.10000000149011612"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<pointSize val="5"/>
	<pointStyle val="0"/>
	<angleStyle val="0"/>
</element>
<element type="numeric" label="I2">
	<value val="NaN"/>
	<show object="false" label="true"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
	<layer val="0"/>
	<labelMode val="1"/>
	<animation step="0.1" speed="1" type="0" playing="false"/>
	<auxiliary val="true"/>
</element>
<expression label="Matrix" exp="{{sin((pi / ϕ * ϕ)), 0, 0}, {0, sin((pi / ϕ * ϕ)), 0}, {0, 0, sin((pi / ϕ * ϕ))}}" />
<element type="list" label="Matrix">
	<objColor r="0" g="100" b="0" alpha="0.10000000149011612"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<pointSize val="5"/>
	<pointStyle val="0"/>
	<angleStyle val="0"/>
	<symbolic val="true" />
</element>
<command name="Element" type="list">
	<input a0="Sequence[{{sin(((κ * pi)) / ϕ), 0, 0}, {0, sin(((κ * pi)) / ϕ), 0}, {0, 0, sin(((κ * pi)) / ϕ)}}, κ, 1, ϕ, 1]" a1="1"/>
	<output a0="Matrix_{Elements}"/>
</command>
<element type="list" label="Matrix_{Elements}">
	<objColor r="0" g="100" b="0" alpha="0.10000000149011612"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<pointSize val="5"/>
	<pointStyle val="0"/>
	<angleStyle val="0"/>
</element>
<command name="Sequence">
	<input a0="Element[SphereA, κ]" a1="κ" a2="1" a3="ϕ" a4="1"/>
	<output a0="SphereLineA"/>
</command>
<element type="list" label="SphereLineA">
	<show object="false" label="true" ev="20"/>
	<objColor r="204" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<pointSize val="5"/>
	<pointStyle val="0"/>
	<angleStyle val="0"/>
</element>
<command name="Sequence">
	<input a0="Element[SphereB, κ]" a1="κ" a2="1" a3="ϕ" a4="1"/>
	<output a0="SphereLineB"/>
</command>
<element type="list" label="SphereLineB">
	<show object="false" label="true" ev="20"/>
	<objColor r="0" g="0" b="255" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<pointSize val="5"/>
	<pointStyle val="0"/>
	<angleStyle val="0"/>
</element>
<command name="Sequence">
	<input a0="Point[Element[SphereA, κ]]" a1="κ" a2="1" a3="ϕ" a4="1"/>
	<output a0="SpherePointsA"/>
</command>
<element type="list" label="SpherePointsA">
	<show object="false" label="true" ev="20"/>
	<objColor r="204" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<pointSize val="2"/>
	<pointStyle val="10"/>
	<angleStyle val="0"/>
</element>
<command name="Sequence">
	<input a0="Point[Element[SphereB, κ]]" a1="κ" a2="1" a3="ϕ" a4="1"/>
	<output a0="SpherePointsB"/>
</command>
<element type="list" label="SpherePointsB">
	<show object="false" label="true" ev="20"/>
	<objColor r="0" g="0" b="255" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<pointSize val="2"/>
	<pointStyle val="10"/>
	<angleStyle val="0"/>
</element>
<command name="Sequence">
	<input a0="Dilate[Element[SphereA, κ], (sin((((κ - 1) * pi)) / ϕ))^(1 / 8), Point[Element[SphereA, κ]]]" a1="κ" a2="1" a3="ϕ" a4="1"/>
	<output a0="l1"/>
</command>
<element type="list" label="l1">
	<show object="false" label="true" ev="20"/>
	<objColor r="0" g="100" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="2" type="0" typeHidden="1"/>
	<pointSize val="5"/>
	<pointStyle val="0"/>
	<angleStyle val="0"/>
</element>
<command name="PointIn">
	<input a0="a"/>
	<output a0="DPA"/>
</command>
<element type="point3d" label="DPA">
	<show object="false" label="true" ev="20"/>
	<objColor r="125" g="125" b="255" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<animation step="1" speed="1" type="1" playing="false"/>
	<pointSize val="5"/>
	<coords x="2.652004880134859" y="2.545165190787742" z="-0.0005281346833140438" w="1"/>
</element>
<command name="OrthogonalLine">
	<input a0="DPA" a1="LensExtension"/>
	<output a0="DLA"/>
</command>
<element type="line3d" label="DLA">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<eqnStyle style="parametric" parameter="λ"/>
	<coords ox="2.652004880134859" oy="2.545165190787742" oz="-0.0005281346833140438" ow="1" vx="-0.41383355346527795" vy="-0.9103504362214384" vz="0.001968069545964017" vw="0"/>
</element>
<command name="Intersect">
	<input a0="DLA" a1="LensExtension"/>
	<output a0="ProjectionDPA"/>
</command>
<element type="point3d" label="ProjectionDPA">
	<show object="false" label="true" ev="20"/>
	<objColor r="68" g="68" b="68" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<pointSize val="4"/>
	<coords x="2.5025254739136282" y="2.2163406150128915" z="0.00018274500410954137" w="1"/>
</element>
<command name="Vector">
	<input a0="DPA" a1="ProjectionDPA"/>
	<output a0="DiscriminantVectorA"/>
</command>
<element type="vector3d" label="DiscriminantVectorA">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<startPoint exp="DPA"/>
	<coords x="-0.1494794062212308" y="-0.32882457577485047" z="0.0007108796874235852" w="0"/>
</element>
<expression label="DPA_{χ}" exp="x(DPA)" />
<element type="numeric" label="DPA_{χ}">
	<value val="2.652004880134859"/>
</element>
<expression label="DPA_{υ}" exp="y(DPA)" />
<element type="numeric" label="DPA_{υ}">
	<value val="2.545165190787742"/>
</element>
<expression label="DPA_{ζ}" exp="z(DPA)" />
<element type="numeric" label="DPA_{ζ}">
	<value val="-0.0005281346833140438"/>
</element>
<expression label="DVA_{ζ}" exp="z(DiscriminantVectorA)" />
<element type="numeric" label="DVA_{ζ}">
	<value val="0.0007108796874235852"/>
</element>
<command name="If">
	<input a0="DVA_{ζ} ≥ 0" a1="(DPA_{χ}, DPA_{υ}, DPA_{ζ})"/>
	<output a0="DOPA"/>
</command>
<element type="point3d" label="DOPA">
	<show object="false" label="true" ev="20"/>
	<objColor r="68" g="68" b="68" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<pointSize val="4"/>
	<coords x="2.652004880134859" y="2.545165190787742" z="-0.0005281346833140438" w="1"/>
</element>
<command name="If">
	<input a0="α_{1st,Incident} &lt; pi / 2" a1="OrthogonalLine[Tangent_{ArcBτ1,IncidentA}, h]" a2="β_{1st,Incident} &lt; pi / 2" a3="OrthogonalLine[Tangent_{ArcAρ1,IncidentB}, i]"/>
	<output a0="NormalLine_{A,B,1stInRe}"/>
</command>
<element type="line3d" label="NormalLine_{A,B,1stInRe}">
	<show object="false" label="true" ev="20"/>
	<objColor r="255" g="127" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="20" typeHidden="1"/>
	<eqnStyle style="parametric" parameter="λ"/>
	<coords ox="3.1914419505130986" oy="1.9456328799441527" oz="0.15956835242351783" ow="1" vx="0.9298472661659292" vy="0.3041382509976135" vz="0.07809114903460383" vw="0"/>
</element>
<command name="If">
	<input a0="α_{1st,Incident} &lt; pi / 2 ∧ α_{2} ≥ 1" a1="Rotate[Αuxiliary_{A,2nd}, (-α_{2nd,Incident}), IncidentPoint_{A,B,2ndInRe}, IntersectionZone_{A,B,2ndInRe}]" a2="β_{1st,Incident} &lt; pi / 2 ∧ β_{2} ≥ 1" a3="Rotate[Αuxiliary_{B,2nd}, (-β_{2nd,Incident}), IncidentPoint_{A,B,2ndInRe}, IntersectionZone_{A,B,2ndInRe}]"/>
	<output a0="Rotate_{A,B,1st,TIR}"/>
</command>
<element type="point3d" label="Rotate_{A,B,1st,TIR}">
	<show object="false" label="true" ev="20"/>
	<objColor r="125" g="125" b="255" alpha="0"/>
	<layer val="0"/>
	<labelOffset x="-32" y="-40"/>
	<labelMode val="0"/>
	<pointSize val="5"/>
	<coords x="2.2709707535099226" y="2.44419833817547" z="0.07300931114818464" w="1"/>
</element>
<command name="If">
	<input a0="α_{1st,Incident} &lt; pi / 2 ∧ α_{2} ≥ 1" a1="Ray[IncidentPoint_{A,B,2ndInRe}, Rotate_{A,B,1st,TIR}]" a2="β_{1st,Incident} &lt; pi / 2 ∧ β_{2} ≥ 1" a3="Ray[IncidentPoint_{A,B,2ndInRe}, Rotate_{A,B,1st,TIR}]" a4="Ray[F_{1}, F_{2}]"/>
	<output a0="LightReflection_{A,B,1st,TIR}"/>
</command>
<element type="ray3d" label="LightReflection_{A,B,1st,TIR}">
	<show object="false" label="false" ev="20"/>
	<objColor r="153" g="51" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<eqnStyle style="parametric" parameter="λ"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
<command name="If">
	<input a0="α_{1st,Incident} &lt; pi / 2 ∧ α_{2} ≥ 1" a1="Plane[B, LightReflection_{A,B,1st,TIR}]" a2="β_{1st,Incident} &lt; pi / 2 ∧ β_{2} ≥ 1" a3="Plane[A, LightReflection_{A,B,1st,TIR}]"/>
	<output a0="IntersectionFindingZone_{A,B,1stInRe,TIR}"/>
</command>
<element type="plane3d" label="IntersectionFindingZone_{A,B,1stInRe,TIR}">
	<show object="false" label="false" ev="4"/>
	<objColor r="99" g="219" b="219" alpha="0.5"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<fading val="0.10000000149011612"/>
	<lineStyle thickness="0" type="0" typeHidden="1"/>
	<eqnStyle style="user"/>
	<coords x="-0.06319691470561715" y="0.008062773280144086" z="0.6886692835931431" w="0.07353205795205475"/>
</element>
<command name="If">
	<input a0="α_{1st,Incident} &lt; pi / 2 ∧ α_{2} ≥ 1" a1="Circle[B, τ, IntersectionFindingZone_{A,B,1stInRe,TIR}]" a2="β_{1st,Incident} &lt; pi / 2 ∧ β_{2} ≥ 1" a3="Circle[A, ρ, IntersectionFindingZone_{A,B,1stInRe,TIR}]"/>
	<output a0="Circle_{A,B,1stInRe,TIR}"/>
</command>
<element type="conic3d" label="Circle_{A,B,1stInRe,TIR}">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<eqnStyle style="parametric"/>
	<eigenvectors x0="1" y0="0" z0="1.0" x1="0" y1="1" z1="1.0"/>
	<matrix A0="1" A1="1" A2="-1" A3="0" A4="0" A5="0"/>
</element>
<command name="Intersect">
	<input a0="LensMidplane" a1="Circle_{A,B,1stInRe,TIR}" a2="1"/>
	<output a0="Vertex_{TIR→1}"/>
</command>
<element type="point3d" label="Vertex_{TIR→1}">
	<show object="false" label="true" ev="20"/>
	<objColor r="68" g="68" b="68" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<pointSize val="4"/>
	<coords x="1.805738454666586" y="2.5331538907536313" z="0.02927500343577357" w="1"/>
</element>
<command name="Intersect">
	<input a0="LensMidplane" a1="Circle_{A,B,1stInRe,TIR}" a2="2"/>
	<output a0="Vertex_{TIR→2}"/>
</command>
<element type="point3d" label="Vertex_{TIR→2}">
	<show object="false" label="true" ev="20"/>
	<objColor r="68" g="68" b="68" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<pointSize val="4"/>
	<coords x="3.2054690960406518" y="1.8971482037038188" z="0.1651698804731678" w="1"/>
</element>
<command name="If">
	<input a0="α_{1st,Incident} &lt; pi / 2 ∧ α_{2} ≥ 1" a1="CircleArc[B, Vertex_{TIR→1}, Vertex_{TIR→2}]" a2="β_{1st,Incident} &lt; pi / 2 ∧ β_{2} ≥ 1" a3="CircleArc[A, Vertex_{TIR→1}, Vertex_{TIR→2}]"/>
	<output a0="Arc_{A,B,1stInRe,TIR}"/>
</command>
<element type="conicpart" label="Arc_{A,B,1stInRe,TIR}">
	<show object="true" label="false" ev="20"/>
	<objColor r="153" g="102" b="255" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<eqnStyle style="parametric"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
	<eigenvectors x0="1" y0="0" z0="1.0" x1="0" y1="1" z1="1.0"/>
	<matrix A0="1" A1="1" A2="-1.0000000000000004" A3="0" A4="0" A5="0"/>
</element>
<command name="If">
	<input a0="α_{1st,Incident} &lt; pi / 2" a1="Circle[A, ρ, ABC_{1}]" a2="β_{1st,Incident} &lt; pi / 2" a3="Circle[B, τ, ABC_{1}]"/>
	<output a0="Circle_{A,B,1stInRe}"/>
</command>
<element type="conic3d" label="Circle_{A,B,1stInRe}">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<eqnStyle style="parametric"/>
	<eigenvectors x0="1" y0="0" z0="1.0" x1="0" y1="1" z1="1.0"/>
	<matrix A0="1" A1="1" A2="-3.24" A3="0" A4="0" A5="0"/>
</element>
<command name="If">
	<input a0="α_{1st,Incident} &lt; pi / 2" a1="CircleArc[B, Vertex_{1→1}, Vertex_{1→2}]" a2="β_{1st,Incident} &lt; pi / 2" a3="CircleArc[A, Vertex_{1→1}, Vertex_{1→2}]"/>
	<output a0="Arc_{A,B,1stInRe}"/>
</command>
<element type="conicpart" label="Arc_{A,B,1stInRe}">
	<show object="true" label="false" ev="20"/>
	<objColor r="204" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<eqnStyle style="parametric"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
	<eigenvectors x0="1" y0="0" z0="1.0" x1="0" y1="1" z1="1.0"/>
	<matrix A0="1" A1="1" A2="-0.9999999999999998" A3="0" A4="0" A5="0"/>
</element>
<command name="If">
	<input a0="(α_{2} ≥ 1 ∨ β_{2} ≥ 1) ∧ Defined[Intersect[LightReflection_{A,B,1st,TIR}, Arc_{A,B,2ndInRe}]]" a1="Intersect[LightReflection_{A,B,1st,TIR}, Arc_{A,B,2ndInRe}, 1]" a2="(α_{2} ≥ 1 ∨ β_{2} ≥ 1) ∧ Defined[Intersect[LightReflection_{A,B,1st,TIR}, Arc_{A,B,1stInRe,TIR}]]" a3="Intersect[LightReflection_{A,B,1st,TIR}, Arc_{A,B,1stInRe,TIR}, 1]"/>
	<output a0="F_{Striped}"/>
</command>
<element type="point3d" label="F_{Striped}">
	<show object="false" label="true" ev="20"/>
	<objColor r="68" g="68" b="68" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<pointSize val="4"/>
	<coords x="2.0186489509087866" y="2.609489516765684" z="0.047919380252210056" w="1"/>
</element>
<command name="If">
	<input a0="α_{1st,Incident} &lt; pi / 2 ∧ α_{2} ≥ 1 ∧ Segment[IncidentPointA_{1st}, Vertex_{A,B,2ndInRe→1}] &gt; Segment[IncidentPointA_{1st}, Vertex_{A,B,2ndInRe→2}]" a1="abs(ceil((Angle[IncidentPoint_{A,B,2ndInRe}, A, Vertex_{A,B,2ndInRe→1}] + 0) / (pi - (2 * (α_{2nd,Incident} + 0)))))" a2="α_{1st,Incident} &lt; pi / 2 ∧ α_{2} ≥ 1 ∧ Segment[IncidentPointA_{1st}, Vertex_{A,B,2ndInRe→2}] &gt; Segment[IncidentPointA_{1st}, Vertex_{A,B,2ndInRe→1}]" a3="abs(ceil((Angle[IncidentPoint_{A,B,2ndInRe}, A, Vertex_{A,B,2ndInRe→2}] + 0) / (pi - (2 * (α_{2nd,Incident} + 0)))))" a4="β_{1st,Incident} &lt; pi / 2 ∧ β_{2} ≥ 1 ∧ Segment[IncidentPointB_{1st}, Vertex_{A,B,2ndInRe→1}] &gt; Segment[IncidentPointB_{1st}, Vertex_{A,B,2ndInRe→2}]" a5="abs(ceil((Angle[IncidentPoint_{A,B,2ndInRe}, B, Vertex_{A,B,2ndInRe→1}] + 0) / (pi - (2 * (β_{2nd,Incident} + 0)))))" a6="β_{1st,Incident} &lt; pi / 2 ∧ β_{2} ≥ 1 ∧ Segment[IncidentPointB_{1st}, Vertex_{A,B,2ndInRe→2}] &gt; Segment[IncidentPointB_{1st}, Vertex_{A,B,2ndInRe→1}]" a7="abs(ceil((Angle[IncidentPoint_{A,B,2ndInRe}, B, Vertex_{A,B,2ndInRe→2}] + 0) / (pi - (2 * (β_{2nd,Incident} + 0)))))"/>
	<output a0="ζ"/>
</command>
<element type="numeric" label="ζ">
	<value val="1"/>
	<objColor r="0" g="100" b="0" alpha="0.10000000149011612"/>
</element>
<expression label="textκ" exp="&quot;κ→ TIR  times&quot;"/>
<element type="text" label="textκ">
	<show object="true" label="true" ev="21"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<fixed val="true"/>
	<isLaTeX val="true"/>
	<font serif="false" sizeM="1" size="0" style="0"/>
	<absoluteScreenLocation x="270" y="53"/>
</element>
<expression label="textρ" exp="&quot;ρ→A  Radius&quot;"/>
<element type="text" label="textρ">
	<show object="true" label="true" ev="21"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<isLaTeX val="true"/>
	<font serif="false" sizeM="1" size="0" style="0"/>
	<absoluteScreenLocation x="60" y="85"/>
</element>
<expression label="textλ" exp="&quot;λ→Focal  Lenght&quot;"/>
<element type="text" label="textλ">
	<show object="true" label="true" ev="21"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<fixed val="true"/>
	<isLaTeX val="true"/>
	<font serif="false" sizeM="1" size="0" style="0"/>
	<absoluteScreenLocation x="310" y="85"/>
</element>
<expression label="textτ" exp="&quot;τ→ B  Radius&quot;"/>
<element type="text" label="textτ">
	<show object="true" label="true" ev="21"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<isLaTeX val="true"/>
	<font serif="false" sizeM="1" size="0" style="0"/>
	<absoluteScreenLocation x="185" y="85"/>
</element>
<command name="Intersect">
	<input a0="LightReflection_{A,B,1st,TIR}" a1="Circle_{A,B,2ndInRe}" a2="1"/>
	<output a0="TIR_{2ndPoint}"/>
</command>
<element type="point3d" label="TIR_{2ndPoint}">
	<show object="false" label="true" ev="20"/>
	<objColor r="204" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<pointSize val="4"/>
	<coords x="1.5625445816083" y="2.908274750481687" z="0.002566077489107546" w="1"/>
</element>
<command name="If">
	<input a0="α_{1st,Incident} &lt; pi / 2 ∧ α_{2} ≥ 1" a1="Angle[IncidentPoint_{A,B,2ndInRe}, A, TIR_{2ndPoint}]" a2="β_{1st,Incident} &lt; pi / 2 ∧ β_{2} ≥ 1" a3="Angle[IncidentPoint_{A,B,2ndInRe}, B, TIR_{2ndPoint}]"/>
	<output a0="γ_{1st,OpeningSize,TIR}"/>
</command>
<element type="angle3d" label="γ_{1st,OpeningSize,TIR}">
	<angleStyle val="1"/>
	<value val="1.0793083464682471"/>
	<lineStyle thickness="5" type="0" typeHidden="2" opacity="178"/>
	<arcSize val="30"/>
	<show object="true" label="true" ev="20"/>
	<objColor r="0" g="100" b="0" alpha="0.10000000149011612"/>
	<layer val="0"/>
	<labelOffset x="23" y="3"/>
	<labelMode val="1"/>
</element>
<expression label="textLatin" exp="&quot;α,β,γ,δ,ε,ζ,η,θ,&#xd;&#xa;ι,κ,λ,μ,ν,ξ,ο,π,&#xd;&#xa;ρ,σ,ς,τ,υ,ϕ,χ,ψ&quot;"/>
<element type="text" label="textLatin">
	<show object="false" label="true" ev="21"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<isLaTeX val="true"/>
	<font serif="false" sizeM="1" size="0" style="0"/>
	<absoluteScreenLocation x="59" y="21"/>
</element>
<command name="If">
	<input a0="α_{1st,Incident} &lt; pi / 2" a1="Segment[A, IncidentPoint_{A,B,2ndInRe}]" a2="β_{1st,Incident} &lt; pi / 2" a3="Segment[B, IncidentPoint_{A,B,2ndInRe}]"/>
	<output a0="TIRradius_{1}"/>
</command>
<element type="segment3d" label="TIRradius_{1}">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
<command name="Rotate">
	<input a0="TIRradius_{1}" a1="γ_{1st,OpeningSize,TIR}" a2="A" a3="IntersectionZone_{A,B,2ndInRe}"/>
	<output a0="TIRradius_{2}"/>
</command>
<element type="segment3d" label="TIRradius_{2}">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
<command name="If">
	<input a0="α_{1st,Incident} &lt; pi / 2 ∧ α_{2} ≥ 1" a1="Sequence[Segment[Rotate[A, ((n - 1) * γ_{1st,OpeningSize,TIR}), A, IntersectionZone_{A,B,2ndInRe}], Rotate[IncidentPoint_{A,B,2ndInRe}, ((n - 1) * γ_{1st,OpeningSize,TIR}), A, IntersectionZone_{A,B,2ndInRe}]], n, 1, ζ + 1, 1]" a2="β_{1st,Incident} &lt; pi / 2 ∧ β_{2} ≥ 1" a3="Sequence[Segment[Rotate[B, ((n - 1) * γ_{1st,OpeningSize,TIR}), B, IntersectionZone_{A,B,2ndInRe}], Rotate[IncidentPoint_{A,B,2ndInRe}, ((n - 1) * γ_{1st,OpeningSize,TIR}), B, IntersectionZone_{A,B,2ndInRe}]], n, 1, ζ + 1, 1]"/>
	<output a0="TIR_{IndicatorLine}"/>
</command>
<element type="list" label="TIR_{IndicatorLine}">
	<show object="true" label="true" ev="20"/>
	<objColor r="0" g="100" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<pointSize val="5"/>
	<pointStyle val="0"/>
	<angleStyle val="0"/>
</element>
<command name="Sequence">
	<input a0="Intersect[Element[TIR_{IndicatorLine}, n], Circle_{A,B,2ndInRe}]" a1="n" a2="1" a3="ζ + 1" a4="1"/>
	<output a0="TIR_{Points}"/>
</command>
<element type="list" label="TIR_{Points}">
	<show object="true" label="true" ev="20"/>
	<objColor r="0" g="0" b="255" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<pointSize val="5"/>
	<pointStyle val="0"/>
	<angleStyle val="0"/>
</element>
<expression label="textα" exp="&quot;α→A  Side  1,2InRe&quot;"/>
<element type="text" label="textα">
	<show object="false" label="true" ev="21"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<isLaTeX val="true"/>
	<font serif="false" sizeM="1" size="0" style="0"/>
	<startPoint x="0" y="0" z="1"/>
</element>
<expression label="textβ" exp="&quot;β→B  Side  1,2InRe&quot;"/>
<element type="text" label="textβ">
	<show object="false" label="true" ev="21"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<isLaTeX val="true"/>
	<font serif="false" sizeM="1" size="0" style="0"/>
	<startPoint x="0" y="0" z="1"/>
</element>
<expression label="textγ" exp="&quot;γ→ TIR&quot;"/>
<element type="text" label="textγ">
	<show object="false" label="true" ev="21"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<isLaTeX val="true"/>
	<font serif="false" sizeM="1" size="0" style="0"/>
	<startPoint x="0" y="0" z="1"/>
</element>
<element type="image" label="pic1">
	<file name="5b53771eeb35929db25773b2f8b22705/download.png"/>
	<inBackground val="false"/>
	<startPoint number="0" x="0.13304156709874168" y="-3.1798871922378815" z="1"/>
	<cropBox x="0" y="0" width="1" height="1" cropped="false"/>	<show object="true" label="true"/>
	<objColor r="0" g="0" b="0" alpha="1"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<animation step="1" speed="1" type="0" playing="false"/>
</element>
<command name="Element" type="point3d">
	<input a0="TIR_{Points}" a1="ζ"/>
	<output a0="TIR_{LastPoint}"/>
</command>
<element type="point3d" label="TIR_{LastPoint}">
	<show object="true" label="true" ev="20"/>
	<objColor r="68" g="68" b="68" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<pointSize val="4"/>
	<coords x="3.10458823864613" y="1.8981114951396012" z="0.15590109806525143" w="1"/>
</element>
<command name="Element" type="point3d">
	<input a0="TIR_{Points}" a1="ζ + 1"/>
	<output a0="TIR_{VirtualPoint}"/>
</command>
<element type="point3d" label="TIR_{VirtualPoint}">
	<show object="true" label="true" ev="20"/>
	<objColor r="68" g="68" b="68" alpha="0"/>
	<layer val="0"/>
	<labelOffset x="38" y="-46"/>
	<labelMode val="0"/>
	<pointSize val="4"/>
	<coords x="1.5625445816082997" y="2.9082747504816875" z="0.0025660774891074906" w="1"/>
</element>
<expression label="e" exp="F_{Striped} ∈ Element[TIR_{IndicatorLine}, 2]" />
<element type="boolean" label="e">
	<value val="false"/>
	<show object="false" label="true"/>
	<objColor r="28" g="28" b="31" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<checkbox fixed="true"/>
</element>
<command name="If">
	<input a0="Segment[IncidentPointA_{1st}, Vertex_{A,B,2ndInRe→1}] &gt; Segment[IncidentPointA_{1st}, Vertex_{A,B,2ndInRe→2}] ∨ Segment[IncidentPointB_{1st}, Vertex_{A,B,2ndInRe→1}] &gt; Segment[IncidentPointB_{1st}, Vertex_{A,B,2ndInRe→2}]" a1="1"/>
	<output a0="Factor_{2}"/>
</command>
<element type="numeric" label="Factor_{2}">
	<value val="1"/>
</element>
<command name="Sequence">
	<input a0="Segment[Element[TIR_{Points}, k], Element[TIR_{Points}, k + 1]]" a1="k" a2="1" a3="ζ - 1" a4="1"/>
	<output a0="TIR_{Lights}"/>
</command>
<element type="list" label="TIR_{Lights}">
	<show object="true" label="true" ev="20"/>
	<objColor r="0" g="153" b="255" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="3" type="0" typeHidden="1"/>
	<listType val="segment3d"/>
	<pointSize val="5"/>
	<pointStyle val="0"/>
	<angleStyle val="0"/>
</element>
<command name="If">
	<input a0="α_{1st,Incident} &lt; pi / 2 ∧ α_{2} ≥ 1" a1="Ray[TIR_{LastPoint}, TIR_{VirtualPoint}]" a2="β_{1st,Incident} &lt; pi / 2 ∧ β_{2} ≥ 1" a3="Ray[TIR_{LastPoint}, TIR_{VirtualPoint}]" a4="Ray[F_{1}, F_{2}]"/>
	<output a0="LightReflection_{A,B,Last,TIR}"/>
</command>
<element type="ray3d" label="LightReflection_{A,B,Last,TIR}">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="153" b="255" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<eqnStyle style="parametric" parameter="λ"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
<command name="If">
	<input a0="α_{1st,Incident} &lt; pi / 2 ∧ α_{2} ≥ 1 ∧ ζ &gt; 0" a1="Plane[B, LightReflection_{A,B,Last,TIR}]" a2="β_{1st,Incident} &lt; pi / 2 ∧ β_{2} ≥ 1 ∧ ζ &gt; 0" a3="Plane[A, LightReflection_{A,B,Last,TIR}]"/>
	<output a0="IntersectionFindingZone_{A,B,3rdInRe}"/>
</command>
<element type="plane3d" label="IntersectionFindingZone_{A,B,3rdInRe}">
	<show object="false" label="false" ev="4"/>
	<objColor r="199" g="80" b="0" alpha="0.15"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<fading val="0.10000000149011612"/>
	<lineStyle thickness="0" type="0" typeHidden="1"/>
	<eqnStyle style="user"/>
	<coords x="-0.11690301991474492" y="0.014914692429643987" z="1.2739153382658186" w="0.13602119146454517"/>
</element>
<command name="If">
	<input a0="α_{1st,Incident} &lt; pi / 2 ∧ α_{2} ≥ 1" a1="Circle[B, τ, IntersectionFindingZone_{A,B,3rdInRe}]" a2="β_{1st,Incident} &lt; pi / 2 ∧ β_{2} ≥ 1" a3="Circle[A, ρ, IntersectionFindingZone_{A,B,3rdInRe}]"/>
	<output a0="Circle_{A,B,3rdInRe}"/>
</command>
<element type="conic3d" label="Circle_{A,B,3rdInRe}">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<eqnStyle style="parametric"/>
	<eigenvectors x0="1" y0="0" z0="1.0" x1="0" y1="1" z1="1.0"/>
	<matrix A0="1" A1="1" A2="-1" A3="0" A4="0" A5="0"/>
</element>
<command name="Intersect">
	<input a0="LensMidplane" a1="Circle_{A,B,3rdInRe}" a2="1"/>
	<output a0="Vertex_{A,B,3rdInRe→1}"/>
</command>
<element type="point3d" label="Vertex_{A,B,3rdInRe→1}">
	<show object="true" label="true" ev="20"/>
	<objColor r="68" g="68" b="68" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<pointSize val="4"/>
	<coords x="1.805738454666586" y="2.5331538907536313" z="0.029275003435773987" w="1"/>
</element>
<command name="Intersect">
	<input a0="LensMidplane" a1="Circle_{A,B,3rdInRe}" a2="2"/>
	<output a0="Vertex_{A,B,3rdInRe→2}"/>
</command>
<element type="point3d" label="Vertex_{A,B,3rdInRe→2}">
	<show object="true" label="true" ev="20"/>
	<objColor r="68" g="68" b="68" alpha="0"/>
	<layer val="0"/>
	<labelOffset x="-21" y="-32"/>
	<labelMode val="0"/>
	<pointSize val="4"/>
	<coords x="3.2054690960406518" y="1.8971482037038188" z="0.16516988047316786" w="1"/>
</element>
<command name="If">
	<input a0="α_{1st,Incident} &lt; pi / 2 ∧ α_{2} ≥ 1" a1="CircleArc[B, Vertex_{A,B,3rdInRe→1}, Vertex_{A,B,3rdInRe→2}]" a2="β_{1st,Incident} &lt; pi / 2 ∧ β_{2} ≥ 1" a3="CircleArc[A, Vertex_{A,B,3rdInRe→1}, Vertex_{A,B,3rdInRe→2}]"/>
	<output a0="Arc_{A,B,3rdInRe}"/>
</command>
<element type="conicpart" label="Arc_{A,B,3rdInRe}">
	<show object="true" label="false" ev="20"/>
	<objColor r="199" g="80" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<eqnStyle style="parametric"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
	<eigenvectors x0="1" y0="0" z0="1.0" x1="0" y1="1" z1="1.0"/>
	<matrix A0="1" A1="1" A2="-1" A3="0" A4="0" A5="0"/>
</element>
<command name="If">
	<input a0="α_{1st,Incident} &lt; pi / 2 ∧ α_{2} ≥ 1" a1="Intersect[LightReflection_{A,B,Last,TIR}, Arc_{A,B,3rdInRe}]" a2="β_{1st,Incident} &lt; pi / 2 ∧ β_{2} ≥ 1" a3="Intersect[LightReflection_{A,B,Last,TIR}, Arc_{A,B,3rdInRe}]"/>
	<output a0="IncidentPoint_{A,B,3rdInRe}"/>
</command>
<element type="point3d" label="IncidentPoint_{A,B,3rdInRe}">
	<show object="true" label="true" ev="20"/>
	<objColor r="68" g="68" b="68" alpha="0"/>
	<layer val="0"/>
	<labelOffset x="-75" y="-29"/>
	<labelMode val="0"/>
	<pointSize val="4"/>
	<coords x="2.018648950908786" y="2.609489516765684" z="0.047919380252210445" w="1"/>
</element>
<command name="If">
	<input a0="α_{1st,Incident} &lt; pi / 2 ∧ α_{2} ≥ 1" a1="Line[IncidentPoint_{A,B,3rdInRe}, B]" a2="β_{1st,Incident} &lt; pi / 2 ∧ β_{2} ≥ 1" a3="Line[IncidentPoint_{A,B,3rdInRe}, A]"/>
	<output a0="NormalLine_{A,B,3rdInRe}"/>
</command>
<element type="line3d" label="NormalLine_{A,B,3rdInRe}">
	<show object="true" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<eqnStyle style="parametric" parameter="λ"/>
	<coords ox="2.018648950908786" oy="2.609489516765684" oz="0.047919380252210445" ow="1" vx="0.22535637088278815" vy="-0.9737480885419685" vz="0.03208061974778956" vw="0"/>
</element>
<command name="If">
	<input a0="α_{1st,Incident} &lt; pi / 2 ∧ α_{2} ≥ 1 ∧ ζ &gt; 0" a1="Vector[UnitVector[NormalLine_{A,B,3rdInRe}]]" a2="β_{1st,Incident} &lt; pi / 2 ∧ β_{2} ≥ 1 ∧ ζ &gt; 0" a3="Vector[UnitVector[NormalLine_{A,B,3rdInRe}]]"/>
	<output a0="UnitVector_{NormalLineA,B,3rd}"/>
</command>
<element type="vector3d" label="UnitVector_{NormalLineA,B,3rd}">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<coords x="0.2253563708827881" y="-0.9737480885419683" z="0.03208061974778955" w="0"/>
</element>
<command name="If">
	<input a0="α_{1st,Incident} &lt; pi / 2" a1="Segment[IncidentPointA_{1st}, IncidentPoint_{A,B,2ndInRe}]" a2="β_{1st,Incident} &lt; pi / 2" a3="Segment[IncidentPointB_{1st}, IncidentPoint_{A,B,2ndInRe}]"/>
	<output a0="IncidentSegment_{A,B,2nd}"/>
</command>
<element type="segment3d" label="IncidentSegment_{A,B,2nd}">
	<show object="true" label="false" ev="20"/>
	<objColor r="0" g="255" b="255" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
<command name="If">
	<input a0="(α_{2} ≥ 1 ∨ β_{2} ≥ 1) ∧ α_{1st,Incident} &lt; pi / 2" a1="Segment[IncidentPoint_{A,B,2ndInRe}, F_{Striped}]" a2="(α_{2} ≥ 1 ∨ β_{2} ≥ 1) ∧ β_{1st,Incident} &lt; pi / 2" a3="Segment[IncidentPoint_{A,B,2ndInRe}, F_{Striped}]"/>
	<output a0="IncidentSegment_{A,B,1st,TIR}"/>
</command>
<element type="segment3d" label="IncidentSegment_{A,B,1st,TIR}">
	<show object="false" label="true" ev="20"/>
	<objColor r="153" g="51" b="0" alpha="0"/>
	<layer val="0"/>
	<labelOffset x="-39" y="-31"/>
	<labelMode val="0"/>
	<fixed val="true"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
<command name="If">
	<input a0="α_{1st,Incident} &lt; pi / 2 ∧ α_{2} ≥ 1 ∧ Min[Angle[IncidentPoint_{A,B,2ndInRe}, A, Vertex_{A,B,2ndInRe→1}] + 0, Angle[IncidentPoint_{A,B,2ndInRe}, A, Vertex_{A,B,2ndInRe→2}] + 0] ≤ Angle[IncidentPoint_{A,B,2ndInRe}, A, Vertex_{A,B,2ndInRe→1}] + 0" a1="abs(floor((Angle[IncidentPoint_{A,B,2ndInRe}, A, Vertex_{A,B,2ndInRe→1}] + 0) / (pi - (2 * (α_{2nd,Incident} + 0)))))" a2="α_{1st,Incident} &lt; pi / 2 ∧ α_{2} ≥ 1 ∧ Min[Angle[IncidentPoint_{A,B,2ndInRe}, A, Vertex_{A,B,2ndInRe→1}] + 0, Angle[IncidentPoint_{A,B,2ndInRe}, A, Vertex_{A,B,2ndInRe→2}] + 0] ≤ Angle[IncidentPoint_{A,B,2ndInRe}, A, Vertex_{A,B,2ndInRe→2}] + 0" a3="abs(floor((Angle[IncidentPoint_{A,B,2ndInRe}, A, Vertex_{A,B,2ndInRe→2}] + 0) / (pi - (2 * (α_{2nd,Incident} + 0)))))" a4="β_{1st,Incident} &lt; pi / 2 ∧ β_{2} ≥ 1 ∧ Min[Angle[IncidentPoint_{A,B,2ndInRe}, B, Vertex_{A,B,2ndInRe→1}] + 0, Angle[IncidentPoint_{A,B,2ndInRe}, B, Vertex_{A,B,2ndInRe→2}] + 0] ≤ Angle[IncidentPoint_{A,B,2ndInRe}, B, Vertex_{A,B,2ndInRe→1}] + 0" a5="abs(floor((Angle[IncidentPoint_{A,B,2ndInRe}, B, Vertex_{A,B,2ndInRe→1}] + 0) / (pi - (2 * (β_{2nd,Incident} + 0)))))" a6="β_{1st,Incident} &lt; pi / 2 ∧ β_{2} ≥ 1 ∧ Min[Angle[IncidentPoint_{A,B,2ndInRe}, B, Vertex_{A,B,2ndInRe→1}] + 0, Angle[IncidentPoint_{A,B,2ndInRe}, B, Vertex_{A,B,2ndInRe→2}] + 0] ≤ Angle[IncidentPoint_{A,B,2ndInRe}, B, Vertex_{A,B,2ndInRe→2}] + 0" a7="abs(floor((Angle[IncidentPoint_{A,B,2ndInRe}, B, Vertex_{A,B,2ndInRe→2}] + 0) / (pi - (2 * (β_{2nd,Incident} + 0)))))"/>
	<output a0="ζ_{Experimental}"/>
</command>
<element type="numeric" label="ζ_{Experimental}">
	<value val="0"/>
</element>
<command name="If">
	<input a0="α_{1st,Incident} &lt; pi / 2" a1="Angle[IncidentPoint_{A,B,2ndInRe}, A, F_{Striped}] + 0" a2="β_{1st,Incident} &lt; pi / 2" a3="Angle[IncidentPoint_{A,B,2ndInRe}, B, F_{Striped}] + 0"/>
	<output a0="ε"/>
</command>
<element type="numeric" label="ε">
	<value val="0.7795818834066434"/>
</element>
<element type="image" label="pic2">
	<file name="5b53771eeb35929db25773b2f8b22705/download.png"/>
	<inBackground val="false"/>
	<startPoint number="0" x="0.7773304346938598" y="-3.809059470558505" z="1"/>
	<cropBox x="0" y="0" width="1" height="1" cropped="false"/>	<show object="true" label="true"/>
	<objColor r="0" g="0" b="0" alpha="1"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<animation step="1" speed="1" type="0" playing="false"/>
</element>
<command name="If">
	<input a0="α_{1st,Incident} ≤ pi / 2" a1="Ray[LightSource, IncidentPointA_{1st}]" a2="β_{1st,Incident} &lt; pi / 2" a3="Ray[LightSource, IncidentPointB_{1st}]" a4="Ray[F_{1}, F_{2}]"/>
	<output a0="LightIncident_{A,B,1st}"/>
</command>
<element type="ray3d" label="LightIncident_{A,B,1st}">
	<show object="false" label="false" ev="20"/>
	<objColor r="199" g="80" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<eqnStyle style="parametric" parameter="λ"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
<command name="If">
	<input a0="α_{1st,Incident} &lt; pi / 2" a1="Ray[IncidentPointA_{1st}, IncidentPoint_{A,B,2ndInRe}]" a2="β_{1st,Incident} &lt; pi / 2" a3="Ray[IncidentPointB_{1st}, IncidentPoint_{A,B,2ndInRe}]" a4="Ray[F_{1}, F_{2}]"/>
	<output a0="LightIncident_{A,B,2nd}"/>
</command>
<element type="ray3d" label="LightIncident_{A,B,2nd}">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<eqnStyle style="parametric" parameter="λ"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
<command name="If">
	<input a0="α_{2} ≥ 1 ∨ β_{2} ≥ 1" a1="Ray[TIR_{LastPoint}, IncidentPoint_{A,B,3rdInRe}]" a2="Ray[F_{1}, F_{2}]"/>
	<output a0="LightIncident_{A,B,3rd}"/>
</command>
<element type="ray3d" label="LightIncident_{A,B,3rd}">
	<show object="false" label="false" ev="20"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<eqnStyle style="parametric" parameter="λ"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
<command name="If">
	<input a0="α_{1st,Incident} &lt; pi / 2 ∧ α_{2} &lt; 1" a1="Ray[IncidentPoint_{A,B,2ndInRe}, Rotate_{A,2nd,Refrection}]" a2="β_{1st,Incident} &lt; pi / 2 ∧ β_{2} &lt; 1" a3="Ray[IncidentPoint_{A,B,2ndInRe}, Rotate_{B,2nd,Refrection}]" a4="Ray[F_{1}, F_{2}]"/>
	<output a0="LightRefraction_{A,B,2nd}"/>
</command>
<element type="ray3d" label="LightRefraction_{A,B,2nd}">
	<show object="true" label="false" ev="20"/>
	<objColor r="153" g="51" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<eqnStyle style="parametric" parameter="λ"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
<command name="If">
	<input a0="α_{1st,Incident} &lt; pi / 2 ∧ α_{2} ≥ 1" a1="Translate[IncidentPoint_{A,B,3rdInRe}, UnitVector_{NormalLineA,B,3rd}]" a2="β_{1st,Incident} &lt; pi / 2 ∧ β_{2} ≥ 1" a3="Translate[IncidentPoint_{A,B,3rdInRe}, UnitVector_{NormalLineA,B,3rd}]"/>
	<output a0="Αuxiliary_{A,B,3rd}"/>
</command>
<element type="point3d" label="Αuxiliary_{A,B,3rd}">
	<show object="true" label="true" ev="20"/>
	<objColor r="68" g="68" b="68" alpha="0"/>
	<layer val="0"/>
	<labelOffset x="-79" y="13"/>
	<labelMode val="0"/>
	<pointSize val="4"/>
	<coords x="2.2440053217915743" y="1.6357414282237157" z="0.07999999999999999" w="1"/>
</element>
<command name="Mirror">
	<input a0="Αuxiliary_{A,B,3rd}" a1="IncidentPoint_{A,B,3rdInRe}"/>
	<output a0="Αuxiliary_{A,B,3rd,Symmetry}"/>
</command>
<element type="point3d" label="Αuxiliary_{A,B,3rd,Symmetry}">
	<show object="true" label="true" ev="20"/>
	<objColor r="68" g="68" b="68" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<pointSize val="4"/>
	<coords x="1.793292580025998" y="3.5832376053076525" z="0.0158387605044209" w="1"/>
</element>
<command name="If">
	<input a0="α_{2} ≥ 1 ∨ β_{2} ≥ 1" a1="Plane[TIR_{LastPoint}, IncidentPoint_{A,B,3rdInRe}, Αuxiliary_{A,B,3rd}]"/>
	<output a0="IntersectionZone_{A,B,3rdInRe}"/>
</command>
<element type="plane3d" label="IntersectionZone_{A,B,3rdInRe}">
	<show object="true" label="false" ev="4"/>
	<objColor r="199" g="80" b="0" alpha="0.15"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<fading val="0.10000000149011612"/>
	<lineStyle thickness="0" type="0" typeHidden="1"/>
	<eqnStyle style="user"/>
	<coords x="-0.08232554350920569" y="0.010503237311050906" z="0.8971177364274336" w="0.09578895843969562"/>
</element>
<command name="Angle">
	<input a0="Αuxiliary_{A,B,3rd}" a1="IncidentPoint_{A,B,3rdInRe}" a2="TIR_{LastPoint}" a3="IntersectionZone_{A,B,3rdInRe}"/>
	<output a0="γ_{3rd,Incident}"/>
</command>
<element type="angle3d" label="γ_{3rd,Incident}">
	<angleStyle val="0"/>
	<value val="0.7637156087501863"/>
	<lineStyle thickness="5" type="0" typeHidden="2" opacity="178"/>
	<arcSize val="30"/>
	<show object="true" label="true" ev="20"/>
	<objColor r="0" g="100" b="0" alpha="0.10000000149011612"/>
	<layer val="0"/>
	<labelOffset x="-68" y="-11"/>
	<labelMode val="1"/>
</element>
<expression label="γ_{3}" exp="(n_{Lens} / n_{Outside} * sin(γ_{3rd,Incident}))" />
<element type="numeric" label="γ_{3}">
	<value val="0.8990928575264551"/>
	<symbolic val="true" />
</element>
<command name="If">
	<input a0="α_{2} ≥ 1 ∨ β_{2} ≥ 1" a1="Rotate[Αuxiliary_{A,B,3rd,Symmetry}, asin(γ_{3}), IncidentPoint_{A,B,3rdInRe}, IntersectionZone_{A,B,3rdInRe}]"/>
	<output a0="Rotate_{A,B,3rd,Refraction}"/>
</command>
<element type="point3d" label="Rotate_{A,B,3rd,Refraction}">
	<show object="true" label="true" ev="20"/>
	<objColor r="68" g="68" b="68" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<pointSize val="4"/>
	<coords x="1.0478936307128042" y="2.8313650671032637" z="-0.04376130731934311" w="1"/>
</element>
<command name="Angle">
	<input a0="Αuxiliary_{A,B,3rd,Symmetry}" a1="IncidentPoint_{A,B,3rdInRe}" a2="Rotate_{A,B,3rd,Refraction}" a3="IntersectionZone_{A,B,3rdInRe}"/>
	<output a0="γ_{3rd,Refraction}"/>
</command>
<element type="angle3d" label="γ_{3rd,Refraction}">
	<angleStyle val="1"/>
	<value val="1.11769283813017"/>
	<lineStyle thickness="5" type="0" typeHidden="2" opacity="178"/>
	<arcSize val="30"/>
	<show object="true" label="true" ev="20"/>
	<objColor r="0" g="100" b="0" alpha="0.10000000149011612"/>
	<layer val="0"/>
	<labelMode val="1"/>
</element>
<expression label="γ_{3}&apos;" exp="sin(γ_{3rd,Refraction})" />
<element type="numeric" label="γ_{3}&apos;">
	<value val="0.8990928575264551"/>
</element>
<command name="If">
	<input a0="α_{2} ≥ 1 ∨ β_{2} ≥ 1" a1="Ray[IncidentPoint_{A,B,3rdInRe}, Rotate_{A,B,3rd,Refraction}]"/>
	<output a0="LightRefraction_{A,B,3rd}"/>
</command>
<element type="ray3d" label="LightRefraction_{A,B,3rd}">
	<show object="true" label="false" ev="20"/>
	<objColor r="204" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<eqnStyle style="parametric" parameter="λ"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
<command name="If">
	<input a0="α_{2} ≥ 1 ∨ β_{2} ≥ 1" a1="Segment[TIR_{LastPoint}, IncidentPoint_{A,B,3rdInRe}]"/>
	<output a0="IncidentSegment_{A,B,3rd}"/>
</command>
<element type="segment3d" label="IncidentSegment_{A,B,3rd}">
	<show object="true" label="false" ev="20"/>
	<objColor r="204" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
</construction>
</geogebra>